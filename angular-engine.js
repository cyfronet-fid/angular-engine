"use strict";angular.module("engine.common",[]),angular.module("engine.dashboard",["ngRoute","engine.list"]),angular.module("engine.document",["ngRoute"]),angular.module("engine.steps",["ngRoute"]);var app=angular.module("engine",["ngRoute","ngResource","formly","engine.formly","ui.bootstrap","checklist-model","engine.common","engine.list","engine.dashboard","engine.steps","ngMessages","ngFileUpload","pascalprecht.translate","engine.document"]);app.config(["formlyConfigProvider","formlyApiCheck","$engLogProvider","$provide","productionMode",function(formlyConfigProvider,formlyApiCheck,$engLogProvider,$provide,productionMode){productionMode&&(formlyApiCheck.config.disabled=!0,formlyConfigProvider.disableWarnings=!0,formlyConfigProvider.extras.ngModelAttrsManipulatorPreferBound=!0,$engLogProvider.setLogLevel("error"))}]),app.run(["$engine","$rootScope","$engLog","$translate",function($engine,$rootScope,$engLog,$translate){function onRelad(){$engLog.debug("engine.common.navigateAway");var event=$rootScope.$broadcast("engine.common.navigateAway");return 1==event.defaultPrevented||null}0==$engine.disableOnReload&&(window.onbeforeunload=onRelad,$rootScope.$on("$locationChangeStart",function(event,next,current){var nextBase=next.match(/^[^?]+/),currBase=current.match(/^[^?]+/);1==nextBase.length&&1==currBase.length&&currBase[0]==nextBase[0]||1==onRelad()&&0==confirm($translate.instant("Do you want to leave this site? Changes you made may not be saved."))&&event.preventDefault()}))}]),angular.module("engine.formly",[]),angular.module("engine.list",["ngRoute"]),app=angular.module("engine.common"),app.component("actionButton",{controller:["$q",function($q){var self=this;this.loading=!1,this.invoke=function(){this.loading||(this.loading=!0,$q.when(this.onClick())["finally"](function(){self.loading=!1}))}}],templateUrl:"/src/common/action-button/action-button.tpl.html",bindings:{onClick:"&",label:"@",btnClass:"@"}}),angular.module("engine.common").constant("ENGINE_SAVE_ACTIONS",["CREATE","UPDATE"]),angular.module("engine.common").factory("DocumentEventCtx",function(){return function(document,action,options){this.document=document,this.action=document,this.options=options}}).factory("ErrorEventCtx",function(){return function(errorId,errorMessage){this.errorId=errorId,this.errorMessage=errorMessage}}).factory("engineActionUtils",["$rootScope","ErrorEventCtx","ENGINE_SAVE_ACTIONS",function($rootScope,ErrorEventCtx,ENGINE_SAVE_ACTIONS){var ENGINE_LINK_ACTION="LINK",isSaveAction=function(action){return!!_.contains(ENGINE_SAVE_ACTIONS,action.type)},isLinkAction=function(action){return action.type==ENGINE_LINK_ACTION},getLinkAction=function(actions){return _.find(actions,isLinkAction)},getCreateUpdateAction=function(actions){for(var i=0;i<actions.length;++i){var action=actions[i];if(isSaveAction(action))return action}return $rootScope.$broadcast("engine.common.error",new ErrorEventCtx("noCreateUpdateAction","Document has no available create / update action, angular-engine framework requires that at least one update and one create action is specified")),null};return{getCreateUpdateAction:getCreateUpdateAction,isSaveAction:isSaveAction,getLinkAction:getLinkAction,isLinkAction:isLinkAction}}]),angular.module("engine.common").component("engineDocumentActions",{templateUrl:"/src/common/document-actions/document-actions.tpl.html",controller:["$rootScope","$scope","DocumentActionList","$engLog","$timeout",function($rootScope,$scope,DocumentActionList,$engLog,$timeout){var self=this;this.documentScope?this._documentScope=this.documentScope:($engLog.warn("engineDocumentActions document-scope argument not specified, using local $scope, which may be not what you want"),this._documentScope=$scope),this.validate=function(){return $scope.$emit("engine.common.document.validate").$promise},this.changeStep=function(newStep){self.step=newStep},$scope.$watch("$ctrl.document",function(newDocument,oldDocument){null==self.actionList||_.isEmpty(newDocument)||null==newDocument||self.actionList._setDocument(newDocument)}),this._documentScope.$on("document.form.requestReload",function(event){$engLog.debug("requested reload for action list"),self.loadActions()}),this.loadActions=function(){self.loading=!0,$timeout(function(){self.actionList=new DocumentActionList(null,self.document,self.documentParent,self._documentScope),self.actionList.$ready["finally"](function(){self.loading=!1})})},self.loadActions()}],bindings:{documentScope:"=",document:"=",options:"=",steps:"=",step:"=",showValidationButton:"=",customButtons:"=",documentParent:"=",dirty:"=",saveAlertLeft:"="}}),angular.module("engine.common").factory("engActionResource",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor){var _action=$resource($engineConfig.baseUrl+"/action/invoke?documentId=:documentId&actionId=:actionId",{actionId:"@actionId",documentId:"@documentId"},{invoke:{method:"POST",transformResponse:EngineInterceptor.response,isArray:!1}}),_actionAvailable=$resource($engineConfig.baseUrl+"/action/available?documentId=:documentId",{documentId:"@id"},{post:{method:"POST",transformResponse:EngineInterceptor.response,isArray:!0}});return{getAvailable:function(document,contextDocumentId){return $engineApiCheck([$engineApiCheck.object,$engineApiCheck.string],arguments),_actionAvailable.post({documentId:contextDocumentId},document)},invoke:function(actionId,document,contextDocumentId){return $engineApiCheck([$engineApiCheck.string,$engineApiCheck.object],arguments),_action.invoke({actionId:actionId,documentId:contextDocumentId||document.id},document)}}}]),angular.module("engine.dashboard").controller("engineDashboardCtrl",["$scope","$route","$engine",function($scope,$route,$engine){$scope.$engine=$engine,$scope.options=$route.current.$$route.options,$scope.queries=$scope.options.queries}]),angular.module("engine.document").component("engineDocumentDetails",{templateUrl:"/src/document/details/details.tpl.html",controller:["$parse",function($parse){var self=this;this.$parse=$parse,this.saveDocument=function(){return self.savePromise=self.actions.callSave(),self.savePromise}}],bindings:{ngModel:"=",options:"=",actions:"=",dirty:"="}}).filter("conditionFulfiled",["$parse",function($parse){return function(items,document){var filtered=[];return angular.forEach(items,function(item){null!=item.condition&&$parse(item.condition)(document)!==!0||filtered.push(item)}),filtered}}]),angular.module("engine.document").component("engineDocument",{templateUrl:"/src/document/document.tpl.html",controller:"engineDocumentCtrl",bindings:{documentChange:"&",document:"=",options:"=",stepList:"=",step:"=",validatedSteps:"=",showValidationButton:"=",documentId:"@",actions:"=",parentDocument:"=",dirty:"="}}).controller("engineDocumentCtrl",["$scope","$route","engineMetric","$routeParams","$engine","engineDocument","engineActionsAvailable","$location","engineActionUtils","DocumentEventCtx","engineAction","engineMetricCategories","StepList","DocumentForm","DocumentActionList","$q","$engLog","$attrs",function($scope,$route,engineMetric,$routeParams,$engine,engineDocument,engineActionsAvailable,$location,engineActionUtils,DocumentEventCtx,engineAction,engineMetricCategories,StepList,DocumentForm,DocumentActionList,$q,$engLog,$attrs){var self=this;$engLog.debug($scope),this.document=null,self.documentScope=$scope,$scope.steps=this.options.document.steps,this.actionList=null,this.documentForm=new DocumentForm($scope),this.dirty=!1,$scope.$watch("$ctrl.documentForm.formlyState.$dirty",function(newValue,oldValue){self.dirty=newValue}),this.getDocument=function(noReloadSteps){var _actionsToPerform=[];return self.documentId&&"new"!=self.documentId?_actionsToPerform.push(engineDocument.get(self.documentId).$promise.then(function(data){self.document=data.document,self.messages=data.messages})):(self.document=angular.copy(self.options.documentJSON),self.document.name=(self.options.name||"Document")+" initiated on "+new Date),$q.all(_actionsToPerform).then(function(){noReloadSteps||self.stepList.setDocument(self.document)})},this.initDocument=function(){var message="engineDocumentCtrl.initDocument called before all required dependencies were resolved, make sure that iniDocument is called after everything is loaded";return assert(self.stepList.$ready,message),self.stepList.setCurrentStep(self.step),self.actionList=new DocumentActionList(null,self.document,self.parentDocument,$scope),self.actionList.$ready.then(function(){return $attrs.actions&&(self.actions=self.actionList),self.documentForm.init(self.document,self.options,self.stepList,self.actionList),self.documentForm.loadForm()})},this.postinitDocument=function(){null==self.actionList.getSaveAction()&&self.documentForm.setEditable(!1),$scope.$watch("$ctrl.step",self.onStepChange)},this.onStepChange=function(newStep,oldStep){newStep!=oldStep&&self.documentForm.isEditable()&&(self.documentForm.validate(oldStep,!0),self.save()),self.stepList.setCurrentStep(newStep),self.documentForm.setStep(newStep)},this.save=function(){return self.actionList.callSave()},$scope.$on("engine.common.document.validate",function(event){event.$promise=self.documentForm.validate(null,!0).then(function(valid){valid||(self.step=self.stepList.getFirstInvalidIndex())})}),$scope.$on("engine.common.document.requestSave",function(event){event.savePromise=self.save()}),$scope.$on("engine.common.action.after",function(event,document,action,result){}),$scope.$on("engine.common.document.requestReload",function(event){$engLog.debug("request reload for document"),event.reloadPromise=self.getDocument(!0).then(function(){self.documentForm._setDocument(self.document),self.actionList._setDocument(self.document)})}),this.$ready=this.getDocument().then(function(){return $q.all(self.stepList.$ready,self.documentForm.$ready)}).then(this.initDocument).then(this.postinitDocument).then(function(){$engLog.debug("engineDocumentCtrl initialized: ",self),$engLog.log(self.$ready.$$state.status)}),$engLog.log(this.$ready.$$state.status)}]),angular.module("engine.document").factory("DocumentModal",["$resource","$uibModal","$translate","$timeout",function($resource,$uibModal,$translate,$timeout){return function(_documentId,_documentOptions,parentDocument,callback){var modalInstance=$uibModal.open({templateUrl:"/src/document/document-modal.tpl.html",keyboard:!1,backdrop:"static",controller:["$scope","documentId","documentOptions","engineActionsAvailable","StepList","engineResolve","$uibModalInstance",function($scope,documentId,documentOptions,engineActionsAvailable,StepList,engineResolve,$uibModalInstance){function _canCloseModal(){return 0==$scope.documentDirty||confirm($translate.instant("Do you want to close this modal? Changes you made have not been saved."))}$scope.engineResolve=engineResolve,$scope.step=0,$scope.documentOptions=documentOptions,$scope.parentDocument=parentDocument,$scope.$scope=$scope,$scope.stepList=new StepList($scope.documentOptions.document.steps),$scope.document={},$scope.documentId=documentId,$scope.closeModal=function(){$uibModalInstance.close()},$scope.$on("modal.closing",function(event){_canCloseModal()||event.preventDefault()}),$scope.$on("engine.common.action.after",function(event,ctx){ctx.action.isSave()&&!ctx.action.isCreate()||"REDIRECT"==ctx.result.type&&(event.preventDefault(),$timeout($scope.closeModal))}),$scope.customButtons=[{label:"Cancel",action:$scope.closeModal}]}],size:"lg",resolve:{documentOptions:function(){return _documentOptions},documentId:function(){return _documentId}}});modalInstance.result.then(function(result){callback&&callback(result)},function(){})}}]),angular.module("engine.document").controller("engineDocumentWrapperCtrl",["$scope","$route","$location","engineMetric","$routeParams","engineResolve","StepList",function($scope,$route,$location,engineMetric,$routeParams,engineResolve,StepList){$scope.engineResolve=engineResolve,$scope.options=$route.current.$$route.options,$scope.stepList=new StepList($route.current.$$route.options.document.steps),$scope.document={},$scope.documentId=$routeParams.id,void 0===$routeParams.step?$routeParams.step=0:$routeParams.step=parseInt($routeParams.step),$scope.sideMenuVisible=!0,$scope.toggleSideMenu=function(){$scope.sideMenuVisible=!$scope.sideMenuVisible},$scope.$routeParams=$routeParams,$scope.$watch("$routeParams.step",function(newVal,oldVal){angular.isString(newVal)&&(newVal=parseInt(newVal),$routeParams.step=newVal),newVal!==oldVal&&$location.search({step:newVal||0})})}]),angular.module("engine.document").factory("DocumentActionList",["DocumentAction","engActionResource","$engineApiCheck","$q","$engLog","$http","$rootScope",function(DocumentAction,engActionResource,$engineApiCheck,$q,$engLog,$http,$rootScope){function DocumentActionList(actions,document,parentDocument,$scope){$engineApiCheck([$engineApiCheck.object,$engineApiCheck.object.optional,$engineApiCheck.object.optional],arguments),null==parentDocument&&(parentDocument={});var self=this;this.$scope=$scope,this.parentDocument=parentDocument,this.parentDocumentId=null!=document.id?null:parentDocument.id,this.actions=[],this.markInit=null,this.loadActions=function(){return engActionResource.getAvailable(self.document,self.parentDocumentId||self.document.id).$promise.then(function(actions){self.actions=[],_.forEach(actions,function(action){self.actions.push(new DocumentAction(action,self.document,self.parentDocument,self.$scope))})})},this.$ready=$q(function(resolve,reject){self.markInit=resolve}).then(self.loadActions),this._setDocument(document)}return DocumentActionList.get=function(document,parentDocument,$scope){var res=new DocumentActionList(document,parentDocument,$scope);return $http.get($engineConfig.baseUrl+"/action/available?documentId="+document.id).then(function(response){var data=response.data.data;return data}),res},DocumentActionList.prototype._setDocument=function(document){if(null!=document&&!_.isEmpty(document)&&document!=this.document){this.document;this.document=document,this.parentDocumentId=document.id?null:this.parentDocumentId,this.markInit(),this.$ready=this.loadActions()}},DocumentActionList.prototype.getSaveAction=function(){return _.find(this.actions,function(action){return action.isSave()})},DocumentActionList.prototype.callSave=function(){var saveAction=this.getSaveAction();return null==saveAction?($engLog.warn("engine.document.actions No save action specified for document",this.document),$q.reject()):($engLog.debug("engine.document.actions Called save for document",this.document),saveAction.call())},DocumentActionList}]).factory("DocumentAction",["engActionResource","$engineApiCheck","DocumentActionProcess","$engLog","$q","$rootScope",function(engActionResource,$engineApiCheck,DocumentActionProcess,$engLog,$q,$rootScope){function DocumentAction(engAction,document,parentDocument,$scope){$engineApiCheck([$engineApiCheck.object,$engineApiCheck.object,$engineApiCheck.object.optional,$engineApiCheck.object.optional],arguments),this.document=document,this.actionId=engAction.id,this.label=engAction.label,this.engAction=engAction,this.type=engAction.type,this.parentDocument=parentDocument,this.parentDocumentId=parentDocument.id,this.$scope=$scope}return DocumentAction.prototype.TYPE_CREATE="CREATE",DocumentAction.prototype.TYPE_UPDATE="UPDATE",DocumentAction.prototype.TYPE_LINK="LINK",DocumentAction.prototype.SAVE_ACTIONS=[DocumentAction.prototype.TYPE_CREATE,DocumentAction.prototype.TYPE_UPDATE],DocumentAction.prototype.LINK_ACTIONS=[DocumentAction.prototype.TYPE_LINK],DocumentAction.prototype.broadcastNotification=function(notificationId){$rootScope.$broadcast(notificationId,this.document,this)},DocumentAction.prototype.call=function(ctx){null==ctx&&(ctx={});var self=this,event=null;if($engLog.debug("engine.document.actions","action called",this),this.$scope){var promises=[];if(event=this.$scope.$broadcast("engine.common.action.before",{document:this.document,action:this,ctx:ctx,promises:promises}),this.broadcastNotification("engine.notification.action.before"),event.defaultPrevented)return this.$scope.$broadcast("engine.common.action.prevented",{document:this.document,action:this,ctx:ctx,event:event}),void this.broadcastNotification("engine.notification.action.prevented");if(this.isSave()&&(event=self.$scope.$broadcast("engine.common.save.before",{document:this.document,action:this,ctx:ctx,promises:promises}),this.broadcastNotification("engine.notification.save.before"),event.defaultPrevented))return self.$scope.$broadcast("engine.common.save.prevented",{document:this.document,action:this,ctx:ctx,event:event}),void self.broadcastNotification("engine.notification.save.prevented")}return $q.all(promises).then(function(){return self.isLink()?engActionResource.invoke(self.actionId,self.parentDocument,self.document.id).$promise:engActionResource.invoke(self.actionId,self.document,self.parentDocumentId).$promise}).then(function(result){if($engLog.debug("engine.document.actions","action call returned",result),self.$scope){var ev1=self.$scope.$broadcast("engine.common.action.after",{document:self.document,action:self,ctx:ctx,result:result}),ev2=self.$scope.$broadcast("engine.common.save.after",{document:self.document,action:self,ctx:ctx,result:result});if(self.broadcastNotification("engine.notification.action.after"),self.isSave()&&self.broadcastNotification("engine.notification.save.after"),ev1.defaultPrevented||ev2.defaultPrevented)return result}return DocumentActionProcess(self.document,result)},function(result){return self.$scope.$broadcast("engine.common.action.error",{document:self.document,action:self,ctx:ctx,result:result}),self.broadcastNotification("engine.notification.action.error"),self.isSave()&&self.broadcastNotification("engine.notification.save.error"),$q.reject(result)})},DocumentAction.prototype.isSave=function(){return _.contains(this.SAVE_ACTIONS,this.type)},DocumentAction.prototype.isCreate=function(){return this.type==this.TYPE_CREATE},DocumentAction.prototype.isLink=function(){return _.contains(this.LINK_ACTIONS,this.type)},DocumentAction}]).factory("DocumentActionProcess",["$location","$engine","engineDocument","$engLog","$q",function($location,$engine,engineDocument,$engLog,$q){return function(document,actionResponse){if("REDIRECT"==actionResponse.type)return document.id==actionResponse.redirectToDocument?$q.resolve():engineDocument.get(actionResponse.redirectToDocument).$promise.then(function(data){null!=document.id&&document.id!=actionResponse.redirectToDocument&&($location.$$search.step=0);var documentOptions=$engine.getOptions(data.document.states.documentType);if(null==documentOptions){var message="Document type to which redirection was requested has not been registrated! Make sure to register it in $engineProvider";throw $engLog.error(message,"DocumentType=",data.document.states.documentType),new Error(message)}return 0==documentOptions.subdocument&&($location.$$path=$engine.pathToDocument(documentOptions,actionResponse.redirectToDocument),$location.$$compose()),actionResponse})}}]),angular.module("engine.document").factory("engAttachment",["$engineConfig","$http","Upload","$q","$engLog",function($engineConfig,$http,Upload,$q,$engLog){function EngineAttachment(documentId,metricId,isList){var self=this;this.isList=isList||!1,this.baseUrl=this.isList?listUrl:singleUrl,this.isList&&(self.dataDict={}),this.documentId=documentId,this.metricId=metricId,this.action=null,this.data=null,this.label="Select file",this.ready=$q.all([this.loadActions(),$q.when(function(){if(null!=self.documentId)return self.loadMetadata()}())])}var listUrl="attachment-list",singleUrl="attachment";return EngineAttachment.prototype.clear=function(){this.data=null},EngineAttachment.prototype.getDownloadLink=function(file){return $engineConfig.baseUrl+this.baseUrl+"/download?documentId="+this.documentId+"&metricId="+this.metricId+"&fileId="+file},EngineAttachment.prototype.getFilename=function(file){return null==file?null!=this.data?this.data.fileName:null:(this.dataDict[file]||{}).fileName},EngineAttachment.prototype.getSize=function(file){return null==file?null!=this.data?this.data.length:null:(this.dataDict[file]||{}).length},EngineAttachment.prototype.loadMetadata=function(){var self=this;return this.data=null,$http.get($engineConfig.baseUrl+self.baseUrl+"?documentId="+this.documentId+"&metricId="+this.metricId).then(function(response){return self.data=response.data.data,self.isList&&(self.dataDict=_.indexBy(self.data,"id")),self.data},function(response){404==response.status&&(self.data=[])})},EngineAttachment.prototype.loadActions=function(){var self=this;return $http.post($engineConfig.baseUrl+"action/available/attachment?documentId="+this.documentId+"&metricId="+this.metricId).then(function(response){0==response.data.data.length&&$engLog.error("No Attachment action available for document: ",self.documentId," and metric ",self.metricId),self.action=response.data.data[0],self.label=self.action.label},function(response){})},EngineAttachment.prototype.upload=function(file){var self=this;return data=self.isList?{files:file}:{file:file},Upload.upload({url:$engineConfig.baseUrl+"/action/invoke/"+self.baseUrl+"?documentId="+this.documentId+"&metricId="+this.metricId+"&actionId="+this.action.id,data:data})},EngineAttachment}]),angular.module("engine.document").filter("formatFileSize",function(){return function(input){return null==input?"- ":Math.floor(input/1024)+"kB"}}),angular.module("engine.document").controller("engAttachmentCtrl",["$scope","Upload","$timeout","engAttachment","$engLog",function($scope,Upload,$timeout,engAttachment,$engLog){function _init(){$scope.error=null,$scope.STATUS=STATUS,$scope.status=STATUS.loading,null!=$scope.ctx.document.id?($scope.attachment=new engAttachment($scope.ctx.document.id,$scope.metric.id,$scope.isList),$scope.attachment.ready.then(function(){$scope.status=STATUS.normal})):($scope.status=STATUS.disabled,$scope.disable=!0)}var STATUS={loading:0,uploading:1,disabled:2,normal:3};null==$scope.model[$scope.metric.id]&&($scope.model[$scope.metric.id]=$scope.isList?[]:null),$scope.$watch("model."+$scope.metric.id,function(newValue,oldValue){null!=newValue&&newValue!=oldValue&&null!=$scope.ctx.document.id&&null!=$scope.attachment&&$scope.attachment.loadMetadata()}),$scope["delete"]=function(){$scope.status=STATUS.loading,$scope.model[$scope.options.key]=$scope.isList?[]:null,$scope.attachment.clear();var event=$scope.$emit("engine.common.document.requestSave");event.savePromise.then(function(){$scope.error=null,$scope.status=STATUS.normal},function(){$scope.error="Could not save document",$scope.status=STATUS.normal})},$scope.upload=function(file){if(null!=file){var event=$scope.$emit("engine.common.document.requestSave");event.savePromise.then(function(){$scope.progress=0,$scope.error=null,$scope.status=STATUS.uploading,$scope.uploadPromise=$scope.attachment.upload(file).then(function(response){$engLog.log("Success "+response.config.data[$scope.isList?"files":"file"].name+"uploaded. Response: "+response.data),$scope.status=STATUS.normal,$scope.error=null;var event=$scope.$emit("engine.common.document.requestReload");event.reloadPromise.then(function(){$scope.attachment.loadMetadata()})},function(response){$engLog.log("Error status: "+response.status),$scope.status=STATUS.normal,$scope.error="An error occurred during upload"},function(evt){$scope.progress=parseInt(100*evt.loaded/evt.total)})},function(){$scope.error="Could not save document",$scope.status=STATUS.normal})}},_init()}]),angular.module("engine.document").factory("createAttachmentCtrl",function(){return function(metric,ctx,isList){return function($scope,Upload,$timeout,engAttachment,$controller){$scope.isList=isList,$scope.metric=metric,$scope.ctx=ctx,$controller("engAttachmentCtrl",{$scope:$scope,Upload:Upload,$timeout:$timeout,engAttachment:engAttachment})}}}),angular.module("engine.document").factory("DocumentCategoryFactory",["DocumentCategory","$engLog","$parse",function(DocumentCategory,$engLog,$parse){function DocumentCategoryFactory(){this._categoryTypeList=[],this._defaultCategory=new DocumentCategory,this._registerBasicCategories()}return DocumentCategoryFactory.prototype.register=function(documentCategory){this._categoryTypeList.push(documentCategory)},DocumentCategoryFactory.prototype.makeCategory=function(category,ctx){for(var i=this._categoryTypeList.length-1;i>=0;--i)if(this._categoryTypeList[i].matches(category))return this._categoryTypeList[i].makeCategory(category,ctx);return this._defaultCategory.makeCategory(category,ctx)},DocumentCategoryFactory.prototype.makeStepCategory=function(step){var formStepStructure={fieldGroup:null,templateOptions:{disabled:!0},data:{step:step,hide:!0,$parse:$parse},wrapper:"step"};return formStepStructure.data.hasEntries=function(){return null!=formStepStructure.data.step.data.summary&&(null!=formStepStructure.data.step.data.summary.entries&&formStepStructure.data.step.data.summary.entries.length>0)},formStepStructure},DocumentCategoryFactory.prototype._registerBasicCategories=function(){this.register(new DocumentCategory("row",function(formlyCategory,metricCategory,ctx){return formlyCategory.templateOptions.wrapperClass="",formlyCategory.wrapper="row",formlyCategory.data.$process=function(){if(null==_.find(formlyCategory.fieldGroup,function(field){return null!=field.className&&null!=field.className.match(/(col-(md|xs|lg)-\d+)/g)})){var size=Math.floor(12/formlyCategory.fieldGroup.length);size=size<1?1:size,_.forEach(formlyCategory.fieldGroup,function(field){field.className+=" col-md-"+size})}},formlyCategory})),this.register(new DocumentCategory("category",function(formlyCategory,metricCategory,ctx){return formlyCategory.templateOptions.wrapperClass="text-box",formlyCategory.templateOptions.wrapperInnerClass="text-content",formlyCategory.wrapper="category",formlyCategory}))},new DocumentCategoryFactory}]).factory("DocumentCategory",["ConditionBuilder",function(ConditionBuilder){function DocumentCategory(categoryCondition,categoryBuilder){null==categoryBuilder&&(categoryBuilder=function(formlyCategory,metricCategory,ctx){return formlyCategory}),null==categoryCondition&&(categoryCondition=function(){return!0}),this.categoryCondition=ConditionBuilder(categoryCondition),this.categoryCustomizer=categoryBuilder,this.categoryWrapper="default",this.categoryWrapperCSS="",this.categoryWrapperInnerCSS=""}return DocumentCategory.prototype.matches=function(metricCategory){return this.categoryCondition(metricCategory)},DocumentCategory.hasMetrics=function(fieldGroup){return null!=_.find(fieldGroup,function(field){return!!field.data.isMetric||(null!=field.fieldGroup?DocumentCategory.hasMetrics(field.fieldGroup):void 0)})},DocumentCategory.prototype.makeCategory=function(metricCategory,ctx){var formlyCategory={templateOptions:{categoryId:metricCategory.id,wrapperClass:this.categoryWrapperCSS,label:metricCategory.label,visualClass:metricCategory.visualClass,css:null==metricCategory.visualClass?"":metricCategory.visualClass.join(" ")},fieldGroup:null,wrapper:this.categoryWrapper,data:{hasMetrics:function(){return DocumentCategory.hasMetrics(formlyCategory.fieldGroup)},position:metricCategory.position,metricCategory:metricCategory}};return this.categoryCustomizer(formlyCategory,metricCategory,ctx)},DocumentCategory}]),angular.module("engine.document").factory("ConditionBuilder",["$engineApiCheck",function($engineApiCheck){var _apiCheck=$engineApiCheck;return function(fieldCondition){_apiCheck([_apiCheck.oneOfType([_apiCheck.func,_apiCheck.string,_apiCheck.object])],arguments);var rFieldCondition=null;if(_.isFunction(fieldCondition))rFieldCondition=fieldCondition;else{var _condition;_condition=_.isString(fieldCondition)?{visualClass:fieldCondition}:fieldCondition,rFieldCondition=function(metric){for(var metricAttribute in _condition){if(_.isArray(metric[metricAttribute])&&!_.contains(metric[metricAttribute],_condition[metricAttribute]))return!1;if(_.isString(metric[metricAttribute])&&metric[metricAttribute]!=_condition[metricAttribute])return!1;if(null==metric[metricAttribute])return!1}return!0}}return rFieldCondition}}]),angular.module("engine.document").factory("DocumentFieldFactory",["DocumentField","$engine","$engLog","createAttachmentCtrl",function(DocumentField,$engine,$engLog,createAttachmentCtrl){function DocumentFieldFactory(){this._fieldTypeList=[],this._defaultField=new DocumentField,this._registerBasicCategories()}return DocumentFieldFactory.prototype._engineOptionsToFormly=function(engineOptions){var r=[];return _.forEach(engineOptions,function(option){r.push({name:null!=option.attributes&&null!=option.attributes.label?option.attributes.label:option.value,value:option.value,extraField:!0})}),r},DocumentFieldFactory.prototype.register=function(documentField){this._fieldTypeList.push(documentField)},DocumentFieldFactory.prototype.makeField=function(metricList,metric,ctx){for(var i=this._fieldTypeList.length-1;i>=0;--i)if(this._fieldTypeList[i].matches(metric))return this._fieldTypeList[i].makeField(metricList,metric,ctx);if(!this.allowDefaultField){var message="DocumentFieldFactory.allowDefaultField is false but there was a metric which could not be matched to registered types: ";throw $engLog.error(message,"Metric",metric,"Registered types",this._fieldTypeList),new Error(message)}return this._defaultField.makeField(metricList,metric,ctx)},DocumentFieldFactory.prototype.makeFields=function(metricList,ctx){var fields=[];return _.forEach(metricList,function(metric){fields.push(this.makeField(metricList,metric,ctx))},this),fields},DocumentFieldFactory.prototype._registerBasicCategories=function(metric){var self=this;this.register(new DocumentField({inputType:"TEXT"},function(field,metric,ctx){return field})),this.register(new DocumentField({inputType:"ATTACHMENT"},function(field,metric,ctx){return field.type="attachment",field.controller=createAttachmentCtrl(metric,ctx,!1),field})),this.register(new DocumentField({inputType:"ATTACHMENT_LIST"},function(field,metric,ctx){return field.type="attachmentList",field.controller=createAttachmentCtrl(metric,ctx,!0),field})),this.register(new DocumentField({visualClass:"select",inputType:"SELECT"},function(field,metric,ctx){return field.type="select",field.templateOptions.options=self._engineOptionsToFormly(metric.options),field})),this.register(new DocumentField({visualClass:"multiSelect",inputType:"MULTISELECT"},function(field,metric,ctx){return field.type="multiSelect",field.templateOptions.options=self._engineOptionsToFormly(metric.options),field})),this.register(new DocumentField({visualClass:"@verticalMultiSelect",inputType:"MULTISELECT"},function(field,metric,ctx){return field.type="multiSelectVertical",field.templateOptions.options=self._engineOptionsToFormly(metric.options),field.data.isDisabled=function(){return field.data.form.disabled},field})),this.register(new DocumentField({visualClass:"@imgMultiSelect",inputType:"MULTISELECT"},function(field,metric,ctx){field.type="multiSelectImage";var cols=metric.cols||2;field.templateOptions.cols=[],field.templateOptions.colClass="col-md-"+12/cols,field.templateOptions.optionsPerCol=Math.ceil(metric.options.length/cols);for(var i=0;i<cols;++i){var col=[];field.templateOptions.cols.push(col);for(var j=0;j<field.templateOptions.optionsPerCol&&i*field.templateOptions.optionsPerCol+j<metric.options.length;++j){var cm=metric.options[i*field.templateOptions.optionsPerCol+j];col.push({value:cm.value,css:null!=cm.visualClass?cm.visualClass.join(" "):"",label:cm.value})}}return null==field.model[field.key]&&(field.model[field.key]=[]),field.controller=function($scope){$scope.addRemoveModel=function(element){_.contains(field.model[field.key],element)?field.model[field.key].splice(field.model[field.key].indexOf(element),1):field.model[field.key].push(element),$scope.options.templateOptions.onChange(field.model[field.key],field,$scope)}},field.data.isDisabled=function(){
return field.data.form.disabled},field.data.isActive=function(element){return _.contains(field.model[field.key],element)},field})),this.register(new DocumentField("radioGroup",function(field,metric,ctx){return field.type="radioGroup",field.templateOptions.options=self._engineOptionsToFormly(metric.options),field})),this.register(new DocumentField({visualClass:"date",inputType:"DATE"},function(field,metric,ctx){return field.type="datepicker",field.data.prepareValue=function(originalValue){return null==originalValue?originalValue:new Date(originalValue)},field.templateOptions.onBlur=void 0,field})),this.register(new DocumentField("checkbox",function(field,metric,ctx){return field.type="checkbox",field})),this.register(new DocumentField({inputType:"INTEGER"},function(field,metric,ctx){return field.type="input",field.templateOptions.type="text",field.templateOptions.numberConvert="true",field.data.prepareValue=function(value){var parsedValue=parseInt(value);return _.isNaN(parsedValue)?value:parsedValue},field})),this.register(new DocumentField({inputType:"FLOAT"},function(field,metric,ctx){return field.type="input",field.templateOptions.type="text",field.templateOptions.floatConvert="true",field.data.prepareValue=function(value){var parsedValue=parseFloat(value);return _.isNaN(parsedValue)?value:parsedValue},field})),this.register(new DocumentField({inputType:"NUMBER"},function(field,metric,ctx){return field.type="input",field.templateOptions.type="text",field.templateOptions.numberConvert="true",field.data.prepareValue=function(value){var parsedValue=parseInt(value);return _.isNaN(parsedValue)?value:parsedValue},field})),this.register(new DocumentField({inputType:"TEXTAREA"},function(field,metric,ctx){return field.type="textarea",field.templateOptions.rows=4,field.templateOptions.cols=15,field})),this.register(new DocumentField({inputType:"EXTERNAL"},function(field,metric,ctx){return field.data.onChange=DocumentField.onChange,field.data.onReload=DocumentField.onReload,{data:field.data,key:metric.id,template:"<"+metric.externalType+' ng-model="options.templateOptions.ngModel" options="options.templateOptions.options" metric="options.data.metric" errors="fc.$error" class="'+metric.visualClass.join(" ")+'" ng-disabled="options.data.form.disabled" formly-options="options" metric-id="'+metric.id+'"></'+metric.externalType+">",templateOptions:{ngModel:ctx.document,options:ctx.options}}})),this.register(new DocumentField({inputType:"QUERIED_LIST"},function(field,metric,ctx){return field={data:_.extend(field.data,{queries:ctx.options.document.queries[metric.id]}),key:metric.id,template:'<engine-document-list form-widget="true" parent-document="options.templateOptions.document" options="options.templateOptions.options" class="'+metric.visualClass.join(" ")+'"  list-caption="\''+metric.label+'\'" metric-id="'+metric.id+'" single-document="options.data.queries.singleDocument || '+(null!=_.find(metric.visualClass,function(visualClass){return"@singleDocument"==visualClass}))+'" columns="options.data.queries.columns" query="\''+metric.queryId+'\'" show-create-button="'+metric.showCreateButton+'" on-select-behavior="'+metric.onSelectBehavior+'"></engine-document-list>',templateOptions:{options:$engine.getOptions(metric.modelId),document:ctx.document}}})),this.register(new DocumentField({inputType:"LINK"},function(field,metric,ctx){return{data:field.data,key:metric.id,template:'<engine-link><a class="'+metric.visualClass.join(" ")+'" href="'+metric.url+'" target="'+metric.target+'">"'+metric.label+'"</a></engine-link>',templateOptions:{ngModel:ctx.document,options:ctx.options}}}))},new DocumentFieldFactory}]).factory("DocumentField",["ConditionBuilder",function(ConditionBuilder){function DocumentField(fieldCondition,fieldBuilder){null==fieldBuilder&&(fieldBuilder=function(formlyField,metric,ctx){return formlyField}),null==fieldCondition&&(fieldCondition=function(){return!0}),this.fieldCondition=ConditionBuilder(fieldCondition),this.fieldCustomizer=fieldBuilder}return DocumentField.onChange=function($viewValue,$modelValue,$scope){_.forEach($scope.options.data.onChangeHandlers,function(callback){callback($viewValue,$modelValue,$scope)})},DocumentField.validate=function($viewValue,$modelValue,$scope){},DocumentField.onReload=function($viewValue,$modelValue,$scope){$scope.$emit("document.form.requestReload"),$scope.options.data.form._onReload()},DocumentField.onValidateSelf=function($viewValue,$modelValue,$scope){var metricToValidate={};metricToValidate[$scope.options.data.metric.id]=null==$viewValue?null:$viewValue,$scope.options.data.form.validator.validateMetrics($modelValue,metricToValidate)},DocumentField.onValidate=function($viewValue,$modelValue,$scope){$scope.$emit("document.form.requestValidate"),$scope.options.data.form.validateCurrentStep(!1)},DocumentField.prototype.matches=function(metric){return this.fieldCondition(metric)},DocumentField.prototype.makeField=function(metricList,metric,ctx){var formlyField={key:metric.id,model:ctx.document.metrics,type:"input",className:metric.visualClass.join(" "),data:{metric:metric,position:metric.position,isMetric:!0,form:ctx.documentForm,categoryId:metric.categoryId,unit:metric.unit,id:metric.id,onChangeHandlers:[]},templateOptions:{type:"text",label:metric.label,metricId:metric.id,description:metric.description,placeholder:"Enter missing value",visualClass:metric.visualClass,onChange:DocumentField.onChange},ngModelAttrs:{metricId:{attribute:"metric-id"}},expressionProperties:{"templateOptions.disabled":function($viewValue,$modelValue,scope){return scope.options.data.form.disabled}},validation:{messages:{server:function(viewValue,modelValue,scope){return _.isArray(scope.to.serverErrors)&&scope.to.serverErrors.length>0?scope.to.serverErrors[0]:""}}}};null!=metric.unit&&(formlyField.wrapper="unit"),1==metric.reloadOnChange&&formlyField.data.onChangeHandlers.push(DocumentField.onReload),1==metric.validateOnChange?["TEXT","TEXTAREA","NUMBER","FLOAT","INTEGER"].indexOf(metric.inputType)!=-1?formlyField.templateOptions.onBlur=DocumentField.onValidate:formlyField.data.onChangeHandlers.push(DocumentField.onValidate):["TEXT","TEXTAREA","NUMBER","FLOAT","INTEGER"].indexOf(metric.inputType)!=-1?formlyField.templateOptions.onBlur=DocumentField.onValidateSelf:formlyField.data.onChangeHandlers.push(DocumentField.onValidateSelf);var ret=this.fieldCustomizer(formlyField,metric,ctx);return _.isFunction(ret.data.prepareValue)&&(ctx.document.metrics[metric.id]=ret.data.prepareValue(ctx.document.metrics[metric.id])),ret},DocumentField}]).directive("numberConvert",function(){return{restrict:"A",require:"ngModel",scope:{model:"=ngModel"},link:function(scope,element,attrs,ngModelCtrl){if(scope.model&&"string"==typeof scope.model)if(scope.model.match(/^\d+$/)){var pv=Number(scope.model);_.isNaN(pv)||(scope.model=pv)}else scope.model=val;scope.$watch("model",function(val,old){if("string"==typeof val)if(val.match(/^\d+$/)){var pv=Number(val);_.isNaN(pv)?scope.model=val:scope.model=pv}else scope.model=val})}}}).directive("floatConvert",function(){return{restrict:"A",require:"ngModel",scope:{model:"=ngModel"},link:function(scope,element,attrs,ngModelCtrl){if(scope.model&&"string"==typeof scope.model)if(scope.model.match(/^\d+(\.\d+)?$/)){var pv=Number(scope.model);_.isNaN(pv)||(scope.model=pv)}else scope.model=val;scope.$watch("model",function(val,old){if("string"==typeof val)if(val.match(/^\d+(\.\d+)?$/)){var pv=Number(val);_.isNaN(pv)?scope.model=val:scope.model=pv}else scope.model=val})}}}),angular.module("engine.document").factory("DocumentForm",["engineMetricCategories","engineMetric","DocumentFieldFactory","$q","DocumentCategoryFactory","$engineApiCheck","$engLog","DocumentValidator",function(engineMetricCategories,engineMetric,DocumentFieldFactory,$q,DocumentCategoryFactory,$engineApiCheck,$engLog,DocumentValidator){function DocumentForm(documentScope){assert(null!=documentScope),this.documentScope=documentScope,this.fieldList=[],this.metricList=[],this.metricDict={},this.metricCategories={},this.document=null,this.documentOptions=null,this.steps=null,this.disabled=!1,this.categoryWrapper="category",this.categoryWrapperCSS="text-box",this.formStructure=[],this.currentFormlyFields=[],this.formlyFields=[],this.validator=null,this.currentStep=null,this.categoriesDict={},this.formLoaded=!1,this.markInit=null;var self=this;this.$ready=$q(function(resolve,reject){self.markInit=resolve}).then(function(){return self._loadMetricCategories()}),this.documentScope.$on("engine.common.save.after",function(event){self.formlyState.$setPristine()}),this.documentScope.$on("engine.common.navigateAway",function(event){self.formlyState.$dirty&&event.preventDefault()})}var _apiCheck=$engineApiCheck;return DocumentForm.prototype.loadForm=function(){var self=this;return this.$ready.then(function(){return self._loadMetrics()}).then(function(){self._makeForm(),self.formLoaded=!0})},DocumentForm.prototype._reloadForm=function(){var self=this;if(!this.formLoaded)throw $engLog.error("DocumentForm._reloadForm called without waiting for DocumentForm.loadForm"),new Error;return this.documentScope.$broadcast("document.form.reloadingMetrics.before"),engineMetric(this.document,function(metricList){$engLog.log("New loaded metrics: ",metricList);var metricDict=_.indexBy(metricList,"id"),newMetrics=_.reject(metricList,function(metric){return metric.id in self.metricDict});$engLog.log("New metrics: ",newMetrics),_.forEach(self.metricList,function(metric){if(!(metric.id in metricDict)){var metricIndex=_.findIndex(self.categoriesDict[metric.categoryId].fieldGroup,function(field){return field.data.id==metric.id});if(metricIndex==-1)return;$engLog.log("Metric to remove: ",metric,"index: ",metricIndex),delete self.metricDict[metric.id],self.categoriesDict[metric.categoryId].fieldGroup.splice(metricIndex,1),delete self.document.metrics[metric.id]}}),_.forEach(newMetrics,function(newMetric){$engLog.log(self.categoriesDict[newMetric.categoryId]),self.addMetric(newMetric);var field=DocumentFieldFactory.makeField(self.metricList,newMetric,{document:self.document,options:self.documentOptions,documentForm:self});self.categoriesDict[newMetric.categoryId].fieldGroup.splice(newMetric.position,0,field),self.categoriesDict[newMetric.categoryId].fieldGroup=_.sortBy(self.categoriesDict[newMetric.categoryId].fieldGroup,function(metric){return metric.data.position});for(var i=0;i<self.steps.getSteps().length;++i){var step=self.steps.getStep(i);if(void 0!==self.categoriesDict[field.data.categoryId]){if(void 0!==step.metrics[field.data.categoryId]){step.fields[field.data.id]=field;break}}else $engLog.warn("$engine.document.DocumentForm There is a metric belonging to metric category which is not connected to any step!","field",field,"categoryId",field.data.categoryId)}}),self.documentScope.$broadcast("document.form.reloadingMetrics.after")}).$promise},DocumentForm.prototype.addMetric=function(metric){metric.id in this.metricDict||(this.metricList.push(metric),this.metricDict[metric.id]=metric)},DocumentForm.prototype._loadMetricCategories=function(){var self=this;return engineMetricCategories.then(function(metricCategories){self.metricCategories=metricCategories})},DocumentForm.prototype._setDocument=function(document){null!=this.document?(this.document=document,_.forEach(this.fieldList,function(field){field.model=document.metrics})):this.document=document},DocumentForm.prototype._setActions=function(actions){this.actions=actions},DocumentForm.prototype._setOptions=function(documentOptions){this.documentOptions=documentOptions},DocumentForm.prototype._setSteps=function(steps){this.steps=steps,_.forEach(this.steps.getSteps(),function(step){_.forEach(step.metricCategories,function(metricCategory){_.isArray(metricCategory.visualClass)?metricCategory.visualClass.push("category"):metricCategory.visualClass=["category"]})})},DocumentForm.prototype.init=function(document,options,steps,actions){_apiCheck([_apiCheck.object,_apiCheck.object,_apiCheck.arrayOf(_apiCheck.object)],arguments),this._setDocument(document),this._setOptions(options),this._setSteps(steps),this._setActions(actions),this.markInit()},DocumentForm.prototype.setEditable=function(editable){this.disabled=!editable},DocumentForm.prototype.isEditable=function(){return!this.disabled},DocumentForm.prototype.setStep=function(step){this.currentFormlyFields=this.formStructure[step],null!=this.currentStep&&(this.formStructure[this.currentStep].data.hide=!0),this.currentStep=step,this.formStructure[this.currentStep].data.hide=!1,$engLog.debug("current fields to display in form",this.currentFormlyFields)},DocumentForm.prototype._assertInit=function(){var message=" is null! make sure to call DocumentForm.init(document, options, steps) before calling other methods";assert(null!=this.document,"DocumentForm.document"+message),assert(null!=this.documentOptions,"DocumentForm.documentOptions"+message),assert(null!=this.steps,"DocumentForm.steps"+message),assert(null!=this.actions,"DocumentForm.actions"+message)},DocumentForm.prototype._onReload=function(){$engLog.debug("Form reload called"),this._reloadForm()},DocumentForm.prototype._makeForm=function(){function parseMetricCategories(step,metricCategories){var formCategories=[];return _.forEach(metricCategories,function(metricCategory){var formMetricCategory=DocumentCategoryFactory.makeCategory(metricCategory,{document:self.document});formMetricCategory.fieldGroup=parseMetricCategories(step,metricCategory.children),self.categoriesDict[metricCategory.id]=formMetricCategory,step.metrics[metricCategory.id]=formMetricCategory,_.isFunction(formMetricCategory.data.$process)&&_categoriesToPostProcess.push(formMetricCategory),formCategories.push(formMetricCategory)}),formCategories}function connectFields(step){_.forEach(self.fieldList,function(field){return void 0===self.categoriesDict[field.data.categoryId]?void $engLog.warn("$engine.document.DocumentForm There is a metric belonging to metric category which is not connected to any step!","field",field,"categoryId",field.data.categoryId):void(void 0!==step.metrics[field.data.categoryId]&&(self.categoriesDict[field.data.categoryId].fieldGroup.push(field),step.fields[field.data.id]=field))})}function postprocess(){_.forEach(_categoriesToPostProcess,function(entry){entry.data.$process()})}function setDefaultValues(){_.forEach(self.metricDict,function(metric,metricId){null!=metric.defaultValue&&null==self.document.metrics[metricId]&&(self.document.metrics[metricId]=metric.defaultValue)})}function reorderFields(){_.forEach(self.categoriesDict,function(metricCategory){metricCategory.fieldGroup=_.sortBy(metricCategory.fieldGroup,function(field){return field.data.position})})}var self=this;$engLog.log("DocumentForm._makeForm",this.fieldList),this._assertInit(),assert(1==this.metricList.$resolved,"Called DocumentForm._makeForm() before calling DocumentForm._loadMetrics"),assert(1==this.metricCategories.$resolved,"Called DocumentForm._makeForm() before calling DocumentForm._loadMetricCategories");var _categoriesToPostProcess=[];return _.forEach(this.steps.getSteps(),function(step){var formStepStructure=DocumentCategoryFactory.makeStepCategory(step);formStepStructure.fieldGroup=parseMetricCategories(step,step.metricCategories),self.formStructure.push(formStepStructure)}),_.forEach(this.steps.getSteps(),function(step){connectFields(step)}),postprocess(),reorderFields(),setDefaultValues(),this.validator=new DocumentValidator(this.document,this.steps,this.formlyState),$engLog.debug("DocumentForm form structure",self.formStructure),self.formStructure},DocumentForm.prototype._updateFields=function(metricList){this.fieldList=DocumentFieldFactory.makeFields(metricList,{document:this.document,options:this.documentOptions,documentForm:this})},DocumentForm.prototype._loadMetrics=function(){var self=this;return engineMetric(this.document,function(metricList){self.metricList=metricList,self.metricDict=_.indexBy(self.metricList,"id"),self._updateFields(self.metricList)}).$promise},DocumentForm.prototype.validateCurrentStep=function(fillNull){return this.validator.validate(this.currentStep,fillNull)},DocumentForm.prototype.validate=function(step,fillNull){return this.validator.validate(step,fillNull)},DocumentForm}]),angular.module("engine.document").factory("StepList",["Step","$q","engineMetricCategories","$engineApiCheck","$engLog","$parse",function(Step,$q,engineMetricCategories,$engineApiCheck,$engLog,$parse){function StepList(documentOptionSteps){this.documentSteps=documentOptionSteps,this.steps=[],this.singleStep=!1,this.$ready=null,this.currentStep=null}return StepList.prototype.setDocument=function(document){var self=this;this.document=document,this.documentSteps=_.filter(this.documentSteps,function(step){var cond=step.condition;return null==cond||(_.isString(cond)?$parse(cond)(self.document):!!_.isFunction(cond)&&cond(self.document))}),this._preprocessDocumentSteps()},StepList.prototype._preprocessDocumentSteps=function(){var self=this;this.$ready=engineMetricCategories.then(function(metricCategories){assert(_.isArray(self.documentSteps)&&!_.isEmpty(self.documentSteps),"documentSteps were not defined"),_.forEach(self.documentSteps,function(step,index){if(_.isArray(step.categories)){var _categories=[];_.forEach(step.categories,function(categoryId){_categories.push(metricCategories.getNames(categoryId))}),self.steps.push(new Step(_categories,step,index))}else{if(!(step.categories in metricCategories.metrics))throw $engLog.error(step.categories," not in ",metricCategories.metrics,". Make sure that metric category registered in document.steps exists"),new Error;self.steps.push(new Step(metricCategories.metrics[step.categories].children,step,index))}})})},StepList.prototype.isLast=function(step){return step==this.steps.length-1},StepList.prototype.getFirstInvalid=function(){return _.find(this.steps,function(step){return step.state==Step.STATE_INVALID})},StepList.prototype.getFirstInvalidIndex=function(){return this.getFirstInvalid().index},StepList.prototype.getSteps=function(){return this.steps},StepList.prototype.getStep=function(stepIndex){return this.steps[stepIndex]},StepList.prototype.setCurrentStep=function(stepIndex){this.currentStep=this.steps[stepIndex]},StepList.prototype.getCurrentStep=function(){return this.currentStep},StepList.prototype.getCurrentStepIndex=function(){return this.steps.indexOf(this.currentStep)},StepList}]).factory("Step",["$engineApiCheck",function($engineApiCheck){function Step(metricCategories,data,index,visible){this.metricCategories=metricCategories,this.metrics={},this.fields={},this.visible=null!=visible,this.state=Step.defaultState,this.$valid=!1,this.name=data.name,this.index=index,this.data=data}return Step.STATE_VALID="valid",Step.STATE_INVALID="invalid",Step.STATE_BLANK="blank",Step.STATE_LOADING="loading",Step.validStates=[Step.STATE_VALID,Step.STATE_INVALID,Step.STATE_LOADING,Step.STATE_BLANK],Step.defaultState="blank",Step.prototype.setState=function(state){assert(null!=state,"Privided state (",state,") is not in",Step.validStates),$engineApiCheck([$engineApiCheck.oneOf(Step.validStates)],arguments),this.state=state},Step.prototype.getState=function(){return this.state},Step}]),angular.module("engine.document").factory("DocumentValidator",["engineDocument","$engineApiCheck","$engLog","Step",function(engineDocument,$engineApiCheck,$engLog,Step){function DocumentValidator(document,stepList,formStructure){this.stepList=stepList,this.formStructure=formStructure,this.document=document}return DocumentValidator.prototype.setStepsState=function(steps,state){$engineApiCheck([$engineApiCheck.arrayOf($engineApiCheck.instanceOf(Step)),$engineApiCheck.oneOf(Step.validStates)],arguments),_.forEach(steps,function(step){step.setState(state)})},DocumentValidator.prototype.cleanDocumentMetrics=function(){var documentForValidation=_.omit(this.document,"metrics");return documentForValidation.metrics={},documentForValidation},DocumentValidator.prototype.makeDocumentForValidation=function(document,stepsToValidate,fillNull){var documentForValidation=this.cleanDocumentMetrics();return _.forEach(stepsToValidate,function(step){_.forEach(step.fields,function(field){documentForValidation.metrics[field.data.id]=document.metrics[field.data.id],fillNull&&void 0===documentForValidation.metrics[field.data.id]&&(documentForValidation.metrics[field.data.id]=null)})}),documentForValidation},DocumentValidator.prototype.validateMetrics=function(field,metrics){var self=this;$engineApiCheck["throw"]([$engineApiCheck.object],arguments);var documentForValidation=this.cleanDocumentMetrics();return documentForValidation.metrics=metrics,engineDocument.validate(documentForValidation).$promise.then(function(validatedMetrics){return validatedMetrics=_.indexBy(validatedMetrics.results,"metricId"),self.setMetricValidation(field,validatedMetrics),validatedMetrics})},DocumentValidator.prototype.setMetricValidation=function(field,validatedMetrics){var self=this;null!=self.formStructure[field.id]&&(null!=validatedMetrics[field.key]&&self.formStructure[field.id].$setValidity("server",validatedMetrics[field.key].valid),field.validation.show=!validatedMetrics[field.key].valid),field.templateOptions.serverErrors=null==validatedMetrics[field.key]?[]:validatedMetrics[field.key].messages},DocumentValidator.prototype.validate=function(step,fillNull){$engineApiCheck([$engineApiCheck.typeOrArrayOf($engineApiCheck.number).optional],arguments);var self=this;$engLog.debug("DocumentValidator.validate called");var stepsToValidate=[];null==step?stepsToValidate=this.stepList.getSteps():(_.isArray(step)||(step=[step]),_.forEach(step,function(stepIndex){stepsToValidate.push(self.stepList.getStep(stepIndex))})),this.setStepsState(stepsToValidate,Step.STATE_LOADING);var documentForValidation=this.makeDocumentForValidation(this.document,stepsToValidate,fillNull);return engineDocument.validate(documentForValidation).$promise.then(function(validationData){$engLog.debug(validationData);var _validatedMetrics=_.indexBy(validationData.results,"metricId");return _.forEach(stepsToValidate,function(step){_.forEach(step.fields,function(field,fieldId){fieldId in _validatedMetrics&&(0==_validatedMetrics[fieldId].valid&&step.setState(Step.STATE_INVALID),self.setMetricValidation(field,_validatedMetrics))}),$engLog.debug(self.formStructure.$error),step.getState()==Step.STATE_LOADING&&step.setState(Step.STATE_VALID)}),validationData.valid})},DocumentValidator}]),angular.module("engine.steps").component("engineSteps",{templateUrl:"/src/document/steps.tpl.html",controller:["$timeout",function($timeout){var self=this;this.changeStep=function(newStep){self.step=newStep}}],bindings:{ngModel:"=",step:"=",stepList:"=",options:"="}}),angular.module("engine").controller("engineMainCtrl",["$rootScope","engineResourceLoader",function($rootScope,engineResourceLoader){$rootScope.resourcesLoaded=!1,0==engineResourceLoader.resources?$rootScope.resourcesLoaded=!0:$rootScope.$on("engine.common.resourcesLoaded",function(){$rootScope.resourcesLoaded=!0})}]),angular.module("engine").provider("$engLog",function(){function canLog(level){return _logLevels.indexOf(level)>=_logLevels.indexOf(_logLevel)}var _logLevel="debug",_provider=this;this.setLogLevel=function(level){_logLevel=level};var _logLevels=["debug","log","info","warning","error",null];this.$get=["$log",function($log){return new function(){this.setLogLevel=_provider.setLogLevel,this.debug=function(){canLog("debug")&&$log.debug(arguments)},this.info=function(){canLog("info")&&$log.info(arguments)},this.log=function(){canLog("log")&&$log.log(arguments)},this.warn=function(){canLog("warning")&&$log.warn(arguments)},this.error=function(){canLog("error")&&$log.error(arguments)},this.warning=this.warn}}]}).provider("$engineConfig",function(){var self=this,_baseUrl="",_loggingLevel="debug";this.setBaseUrl=function(url){_baseUrl=url},this.setLoggingLevel=function(level){_loggingLevel=level},this.$get=function(){return{baseUrl:_baseUrl,setBaseUrl:self.setBaseUrl}}}).provider("$engineApiCheck",["productionMode",function(productionMode){var self=this;this.apiCheck=apiCheck({output:{prefix:"angular-engine"},disabled:productionMode}),this.$get=function(){return self.apiCheck}}]).service("engineResourceLoader",["$rootScope","$engLog",function($rootScope,$engLog){var _resourcesCount=0;return{register:function(promise){$engLog.debug("registered resource",promise),++_resourcesCount,promise.then(function(){--_resourcesCount,0==_resourcesCount&&$rootScope.$broadcast("engine.common.resourcesLoaded")})},resources:_resourcesCount}}]).provider("$engine",["$routeProvider","$engineApiCheckProvider","$engineFormlyProvider",function($routeProvider,$engineApiCheckProvider,$engineFormlyProvider){function prepareDocumentOptions(options){null==options.list.customButtons&&(options.list.customButtons=[]),_.isArray(options.list.customButtons)||(options.list.customButtons=[options.list.customButtons])}function _checkDocumentOptions(options){null!=options.document&&(null!=options.document.queries&&_.each(options.document.queries,function(metric){_apiCheck["throw"]([_apiCheck.shape({columns:_apiCheck.columnOptions,singleDocument:_apiCheck.bool.optional})],[metric])}),null==options.document.queries&&(options.document.queries={}))}var self=this,dashboards=[],documents=[],documents_d={},_apiCheck=$engineApiCheckProvider.apiCheck;_apiCheck.columnOptions=_apiCheck.arrayOf(_apiCheck.shape({name:_apiCheck.string,caption:_apiCheck.string.optional,style:_apiCheck.string.optional,type:_apiCheck.string.optional})).optional,_apiCheck.documentOptions=_apiCheck.shape({documentJSON:_apiCheck.object,name:_apiCheck.string,list:_apiCheck.shape({caption:_apiCheck.string,templateUrl:_apiCheck.string,createButtonLabel:_apiCheck.string.optional,customButtons:_apiCheck.typeOrArrayOf(_apiCheck.shape({label:_apiCheck.string,callback:_apiCheck.oneOfType([_apiCheck.func,_apiCheck.string])})).optional}),document:_apiCheck.shape({templateUrl:_apiCheck.string,steps:_apiCheck.arrayOf(_apiCheck.object),showValidateButton:_apiCheck.bool.optional,caption:_apiCheck.string.optional,queries:_apiCheck.object.optional})});var _defaultDocumentOptions={list:{templateUrl:"/src/list/list.wrapper.tpl.html"},document:{templateUrl:"/src/document/document.wrapper.tpl.html",showValidationButton:!0}};self._disableOnReload=!1,this.disableOnReload=function(){self._disableOnReload=!0},this.enableOnReload=function(){self._disableOnReload=!1},this.dashboard=function(url,queries,options){var _options={templateUrl:"/src/dashboard/dashboard.tpl.html"};options=angular.merge(_options,options),_apiCheck([_apiCheck.oneOfType([_apiCheck.string,_apiCheck.object]),_apiCheck.arrayOf(_apiCheck.shape({queryId:_apiCheck.string,label:_apiCheck.string,controller:_apiCheck.string,contentTemplateUrl:_apiCheck.string.optional,documentModelId:_apiCheck.string.optional,columns:_apiCheck.columnOptions,showCreateButton:_apiCheck.bool.optional,customButtons:_apiCheck.typeOrArrayOf(_apiCheck.shape({label:_apiCheck.string,callback:_apiCheck.oneOfType([_apiCheck.func,_apiCheck.string])})).optional}),_apiCheck.shape({templateUrl:_apiCheck.string,caption:_apiCheck.string.optional}))],[url,queries,options]),options.queries=queries;var dashboardRoutingOptions={};_.isObject(url)&&(dashboardRoutingOptions=url,url=url.url),dashboardRoutingOptions.templateUrl=options.templateUrl,dashboardRoutingOptions.controller="engineDashboardCtrl",dashboardRoutingOptions.options=options,$routeProvider.when(url,dashboardRoutingOptions),dashboards.push({url:url,queries:queries,options:options})},this.document=function(documentModelType,listUrl,documentUrl,query,options){options=angular.merge(angular.copy(_defaultDocumentOptions),options),_apiCheck["throw"]([_apiCheck.string,_apiCheck.oneOfType([_apiCheck.string,_apiCheck.object]),_apiCheck.oneOfType([_apiCheck.string,_apiCheck.object]),_apiCheck.typeOrArrayOf(_apiCheck.string),_apiCheck.documentOptions],[documentModelType,listUrl,documentUrl,query,options]),assert(options.document.steps.length>0,"options.document.steps has length == 0, please define at least one step for document"),prepareDocumentOptions(options),_checkDocumentOptions(options),options.documentModelType=documentModelType,options.listUrl=listUrl.url||listUrl,options.list.url=options.listUrl,options.documentUrl=documentUrl.url||documentUrl,options.document.url=options.documentUrl,options.query=query,options.subdocument=!1;var documentRoutingOptions={};_.isObject(documentUrl)&&(documentRoutingOptions=documentUrl),documentRoutingOptions.templateUrl=options.document.templateUrl,documentRoutingOptions.controller="engineDocumentWrapperCtrl",documentRoutingOptions.options=options,documentRoutingOptions.reloadOnSearch=!1;var listRoutingOptions={};_.isObject(listUrl)&&(listRoutingOptions=documentUrl),listRoutingOptions.templateUrl=options.list.templateUrl,listRoutingOptions.controller="engineListWrapperCtrl",listRoutingOptions.options=options,documents.push({list_route:listUrl,document_route:documentUrl}),$routeProvider.when(options.listUrl,listRoutingOptions),$routeProvider.when(options.documentUrl,documentRoutingOptions),documents_d[documentModelType]=options},this.subdocument=function(documentModelType,query,options){options=angular.merge(angular.copy(_defaultDocumentOptions),options),_apiCheck["throw"]([_apiCheck.string,_apiCheck.typeOrArrayOf(_apiCheck.string),_apiCheck.documentOptions],[documentModelType,query,options]),assert(options.document.steps.length>0,"options.document.steps has length == 0, please define at least one step for document"),prepareDocumentOptions(options),_checkDocumentOptions(options),options.query=query,options.subdocument=!0,documents_d[documentModelType]=options},this.formly=$engineFormlyProvider;var _baseUrl="";this.setBaseUrl=function(url){_baseUrl=url};var _visibleDocumentFields=[{name:"id",caption:"ID",type:"link",style:"monospace"},{name:"name",caption:"Name"}];this.setDocumentFields=function(documentFields){_visibleDocumentFields=documentFields},this.addDocumentFields=function(document_fields){document_fields instanceof Array?angular.forEach(document_fields,function(field){_visibleDocumentFields.push(field)}):_visibleDocumentFields.push(document_fields)},this._debug=!1,this.enableDebug=function(){self._debug=!0},this.disableDebug=function(){self._debug=!1},this.$get=["$engineFormly","engineDocument","$rootScope","$engLog","engineQuery",function($engineFormly,engineDocument,$rootScope,$engLog,engineQuery){var _engineProvider=self;return new function(){this.apiCheck=_apiCheck,this.formly=$engineFormly,this.baseUrl=_baseUrl,this.documents=documents,this.documents_d=documents_d,this.disableOnReload=_engineProvider._disableOnReload,this.visibleDocumentFields=_visibleDocumentFields,this.getOptions=function(documentModelId){return _apiCheck.string(documentModelId),documents_d[documentModelId]},this.enableDebug=function(){_engineProvider._debug=!0,$rootScope.$on("engine.common.error",function(event,errorEvent){_engineProvider._debug&&$engLog.error(errorEvent)})},this.disableDebug=function(){_engineProvider._debug=!1},this.pathToDocument=function(options,documentId){return _apiCheck([_apiCheck.documentOptions,_apiCheck.string.optional],arguments),document?options.document.url.replace(":id",documentId):options.document.documentUrl.replace(":id","new")},this.registerResourceProcessor=function(){},this.registerDocumentProcessor=function(processor){engineDocument.response_processors.push(processor),engineQuery.response_processors.push(processor)}}}]}]),angular.module("engine").factory("engineResolve",function(){function index(obj,i){if(null!=obj)return obj[i]}return function(baseObject,str){return str?str.split(".").reduce(index,baseObject):""}}).factory("$engResource",["$engineConfig",function($engineConfig){var engResource=function(){var defaults={browse:{method:"GET",transformResponse:transformResponse},query:{method:"GET",transformResponse:transformResponse,
isArray:!0},get:{method:"GET",transformResponse:transformResponse},create:{method:"POST",transformRequest:transformRequest},update:{method:"PATCH",transformRequest:transformRequest},destroy:{method:"DELETE"}};angular.extend(defaults,options.methods);var resource=$resource($engineConfig.baseUrl+options.url,options.params,defaults);return resource};return engResource}]).service("engineQuery",["$engineConfig","$engineApiCheck","$http","EngineInterceptor","$q",function($engineConfig,$engineApiCheck,$http,EngineInterceptor,$q){var request_processors=[],response_processors=[];return{request_processors:request_processors,response_processors:response_processors,get:function(query,parentDocument,callback,errorCallback){$engineApiCheck["throw"]([$engineApiCheck.string,$engineApiCheck.object.optional,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments);var parentDocumentId=null!=parentDocument&&null!=parentDocument.id?parentDocument.id:"",res=[];res.$resolved=0;var q=$http.post($engineConfig.baseUrl+"/query/documents-with-extra-data?queryId="+query+"&attachAvailableActions=true&otherDocumentId="+parentDocumentId+"&documentId="+parentDocumentId).then(function(response){return response.data}).then(EngineInterceptor.response).then(function(data){return res=angular.merge(res,data)});return _.forEach(response_processors,function(processor){var processingQueue=[];q=q.then(function(documents){return _.forEach(documents,function(document,index){_.isNaN(parseInt(index))||processingQueue.push($q.when(processor(document.document)))}),$q.all(processingQueue).then(function(){return documents})})}),q=q.then(function(data){return res.$resolved=1,res},function(response){res.$resolved=2,res.$error=!0,res.$errorMessage=response.data.msg}).then(callback,errorCallback),res.$promise=q,res}}}]).service("engineDashboard",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor){var _queryCategory=$resource($engineConfig.baseUrl+"/query?queryCategoryId=:queryCategoryId",{queryCategoryId:"@queryCategoryId"},{get:{method:"GET",transformResponse:EngineInterceptor.response,isArray:!0}});return{fromList:function(queryIds){$engineApiCheck([$engineApiCheck.arrayOf($engineApiCheck.string)],arguments)},fromCategory:function(queryCategoryId,callback,errorCallback){return $engineApiCheck([$engineApiCheck.string],arguments),_queryCategory.get({queryCategoryId:queryCategoryId},callback,errorCallback)}}}]).service("engineMetric",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor){var metricSorter=function(data,headersGetter,status){var data=EngineInterceptor.response(data,headersGetter,status);return data=_.sortBy(data,"position")},_query=$resource($engineConfig.baseUrl+"/metrics",{},{post:{method:"POST",transformResponse:metricSorter,isArray:!0}});return function(documentJSON,callback,errorCallback){return $engineApiCheck([$engineApiCheck.object,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments),_query.post(documentJSON,callback,errorCallback)}}]).service("engineMetricCategories",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor","$engLog",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor,$engLog){function collectMetrics(metrics){function writeMetric(_metric){_names[_metric.id]=_metric}function collectChildren(metric){angular.forEach(metric.children,function(_metric){writeMetric(_metric),collectChildren(_metric)})}angular.forEach(metrics,function(_metric){writeMetric(_metric),collectChildren(_metric)})}var _query=$resource($engineConfig.baseUrl+"/metric-categories",{},{get:{method:"GET",transformResponse:EngineInterceptor.response,isArray:!0}}),_metricCategories={},_names={},_promise=_query.get().$promise.then(function(data){return angular.forEach(data,function(metricCategory){_metricCategories[metricCategory.id]=metricCategory}),collectMetrics(data),$engLog.debug(_metricCategories),{$resolved:!0,metrics:_metricCategories,getNames:function(metricCategoryId){return metricCategoryId in _names||$engLog.error("You tried to access metricCategory which does not exist, check whether metric references existsing metric category. Wrong key: "+metricCategoryId),_names[metricCategoryId]}}});return _promise}]).service("engineActionsAvailable",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor){var _action=$resource($engineConfig.baseUrl+"/action/available?documentId=:documentId",{documentId:"@id"},{post:{method:"POST",transformResponse:EngineInterceptor.response,isArray:!0}});return{forDocument:function(document,callback,errorCallback){return $engineApiCheck([$engineApiCheck.object,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments),_action.post({documentId:document.id},document,callback,errorCallback)},forType:function(documentJson,parentDocumentId,callback,errorCallback){return _action.post({documentId:parentDocumentId},documentJson,callback,errorCallback)}}}]).service("engineAction",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor){var _action=$resource($engineConfig.baseUrl+"/action/invoke?documentId=:documentId&actionId=:actionId&otherDocumentId=:otherDocumentId",{actionId:"@actionId",documentId:"@documentId",otherDocumentId:"@otherDocumentId"},{post:{method:"POST",transformResponse:EngineInterceptor.response,isArray:!1}});return function(actionId,document,callback,errorCallback,parentDocumentId,documentId){return $engineApiCheck([$engineApiCheck.string,$engineApiCheck.object,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments),_action.post({actionId:actionId,documentId:documentId||document.id,otherDocumentId:parentDocumentId},document,callback,errorCallback)}}]).service("engineDocument",["$engineConfig","$engineApiCheck","$resource","EngineInterceptor","$http",function($engineConfig,$engineApiCheck,$resource,EngineInterceptor,$http){var _document=$resource("",{documentId:"@documentId"},{getDocument:{url:$engineConfig.baseUrl+"/document/getwithextradata?documentId=:documentId&attachAvailableActions=true",method:"POST",transformResponse:EngineInterceptor.response},validate:{url:$engineConfig.baseUrl+"/validate-metric-values?documentId=:documentId",method:"POST",transformResponse:EngineInterceptor.response}}),request_processors=[],response_processors=[];return{request_processors:request_processors,response_processors:response_processors,get:function(documentId,callback,errorCallback){$engineApiCheck([$engineApiCheck.string,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments,errorCallback);var res={$resolved:0},q=$http.post($engineConfig.baseUrl+"/document/getwithextradata?documentId="+documentId+"&attachAvailableActions=true",null).then(function(response){return response.data}).then(EngineInterceptor.response).then(function(data){return res=angular.merge(res,data),res.document});return _.forEach(response_processors,function(processor){q=q.then(processor)}),q=q.then(function(data){return res.document=data,res.$resolved=1,res}).then(callback,errorCallback),res.$promise=q,res},validate:function(document,callback,errorCallback){return $engineApiCheck([$engineApiCheck.object,$engineApiCheck.func.optional,$engineApiCheck.func.optional],arguments),_document.validate({documentId:document.id},document,callback,errorCallback)}}}]).service("EngineInterceptor",["$engLog",function($engLog){function processData(data){if(null!=data&&(void 0!==data.document&&(data=data.document),null!==data.metrics&&void 0!==data.metrics))for(var metric in data.metrics)data[metric]=data.metrics[metric]}return{response:function(data,headersGetter,status){if(angular.isString(data)){if(""==data)return{};data=angular.fromJson(data)}return data=data.data,data instanceof Array?angular.forEach(data,processData):processData(data),data},request:function(data,headersGetter){var site=data.site;return $engLog.log("parsing request"),site&&site.id&&(data.site=site.id,data.siteName=site.value.provider_id),angular.toJson(data)}}}]).service("MetricToFormly",function(){return function(data,headersGetter,status){}});var ENGINE_COMPILATION_DATE="2017-06-20T10:36:01.072Z",ENGINE_VERSION="0.6.92",ENGINE_BACKEND_VERSION="1.0.119",ENGINE_ENV="production",ENGINE_PRODUCTION_MODE="production"==ENGINE_ENV;angular.module("engine").constant("version",ENGINE_VERSION),angular.module("engine").constant("backendVersion",ENGINE_BACKEND_VERSION),angular.module("engine").constant("productionMode",ENGINE_PRODUCTION_MODE),angular.module("engine.formly").provider("$engineFormly",function(){var _typeTemplateUrls={input:"/src/formly/types/templates/input.tpl.html",attachment:"/src/formly/types/templates/attachment.tpl.html",attachmentList:"/src/formly/types/templates/attachmentList.tpl.html",select:"/src/formly/types/templates/select.tpl.html",checkbox:"/src/formly/types/templates/checkbox.tpl.html",radio:"/src/formly/types/templates/radio.tpl.html",radioGroup:"/src/formly/types/templates/radioGroup.tpl.html",textarea:"/src/formly/types/templates/textarea.tpl.html",datepicker:"/src/formly/types/templates/datepicker.tpl.html",multiCheckbox:"/src/formly/types/templates/multiCheckbox.tpl.html",multiSelect:"/src/formly/types/templates/multiSelect.tpl.html",multiSelectImage:"/src/formly/types/templates/multiSelectImage.tpl.html",multiSelectVertical:"/src/formly/types/templates/multiSelectVertical.tpl.html"},_wrapperTemplateUrls={category:"/src/formly/wrappers/templates/category.tpl.html",label:"/src/formly/wrappers/templates/label.tpl.html",hasError:"/src/formly/wrappers/templates/has-error.tpl.html",step:"/src/formly/wrappers/templates/step.tpl.html",unit:"/src/formly/wrappers/templates/unit.tpl.html","default":"/src/formly/wrappers/templates/default.tpl.html"};this.templateUrls=_typeTemplateUrls,this.wrapperUrls=_wrapperTemplateUrls,this.setTypeTemplateUrl=function(type,url){_typeTemplateUrls[type]=url},this.setWrapperTemplateUrl=function(wrapper,url){_wrapperTemplateUrls[wrapper]=url},this.$get=function(){return new function(){this.templateUrls=_typeTemplateUrls,this.wrapperUrls=_wrapperTemplateUrls}}}),angular.module("engine.formly").run(["formlyConfig","$engineFormly","$engine","$engLog",function(formlyConfig,$engineFormly,$engine,$engLog){function camelize(string){return string=string.replace(/[\-_\s]+(.)?/g,function(match,chr){return chr?chr.toUpperCase():""}),string.replace(/^([A-Z])/,function(match,chr){return chr?chr.toLowerCase():""})}var attributes=["date-disabled","custom-class","show-weeks","starting-day","init-date","min-mode","max-mode","format-day","format-month","format-year","format-day-header","format-day-title","format-month-title","year-range","shortcut-propagation","datepicker-popup","show-button-bar","current-text","clear-text","close-text","close-on-date-selection","datepicker-append-to-body"],bindings=["datepicker-mode","min-date","max-date"],ngModelAttrs={};angular.forEach(attributes,function(attr){ngModelAttrs[camelize(attr)]={attribute:attr}}),angular.forEach(bindings,function(binding){ngModelAttrs[camelize(binding)]={bound:binding}}),$engLog.log(ngModelAttrs),formlyConfig.setType({name:"datepicker",templateUrl:$engineFormly.templateUrls.datepicker,wrapper:["engineLabel","engineHasError"],defaultOptions:{ngModelAttrs:ngModelAttrs,templateOptions:{datepickerOptions:{format:"dd-MM-yyyy",initDate:new Date,allowInvalid:!0},css:""}},controller:function($scope){$scope.openedDatePopUp=!1,$scope.today=function(){$scope.model[$scope.options.key]=new Date},$scope.openPopUp=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.openedDatePopUp=!0},$scope.dateOptions={formatYear:"yy",startingDay:1}}})}]),angular.module("engine.formly").run(["formlyConfig","$engineFormly","$engineApiCheck",function(formlyConfig,$engineFormly,$engineApiCheck){formlyConfig.setType({name:"input",templateUrl:$engineFormly.templateUrls.input,wrapper:["engineLabel","engineHasError"]}),formlyConfig.setType({name:"attachment",templateUrl:$engineFormly.templateUrls.attachment,wrapper:["engineLabel","engineHasError"]}),formlyConfig.setType({name:"attachmentList",templateUrl:$engineFormly.templateUrls.attachmentList,wrapper:["engineLabel","engineHasError"]}),formlyConfig.setType({name:"checkbox",templateUrl:$engineFormly.templateUrls.checkbox,wrapper:["engineHasError"]}),formlyConfig.setType({name:"radio",templateUrl:$engineFormly.templateUrls.radio,wrapper:["engineLabel","engineHasError"],defaultOptions:{noFormControl:!1}}),formlyConfig.setType({name:"radioGroup",templateUrl:$engineFormly.templateUrls.radioGroup,wrapper:["engineLabel","engineHasError"],defaultOptions:{noFormControl:!1}}),formlyConfig.setType({name:"multiSelect",templateUrl:$engineFormly.templateUrls.multiSelect,wrapper:["engineLabel","engineHasError"],defaultOptions:{noFormControl:!1}}),formlyConfig.setType({name:"multiSelectImage",templateUrl:$engineFormly.templateUrls.multiSelectImage,wrapper:["engineLabel","engineHasError"],defaultOptions:{noFormControl:!1}}),formlyConfig.setType({name:"multiSelectVertical",templateUrl:$engineFormly.templateUrls.multiSelectVertical,wrapper:["engineLabel","engineHasError"],defaultOptions:{noFormControl:!1}}),formlyConfig.setType({name:"select",templateUrl:$engineFormly.templateUrls.select,wrapper:["engineLabel","engineHasError"],defaultOptions:function(options){var ngOptions=options.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options",_options={ngModelAttrs:{}};return _options.ngModelAttrs[ngOptions]={value:options.templateOptions.optionsAttr||"ng-options"},_options}}),formlyConfig.setType({name:"textarea",templateUrl:$engineFormly.templateUrls.textarea,wrapper:["engineLabel","engineHasError"],defaultOptions:function(options){var _options={ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}};return _options}})}]),angular.module("engine.formly").config(["$engineFormlyProvider",function($engineFormlyProvider){$engineFormlyProvider.setWrapperTemplateUrl("row","/src/formly/wrappers/templates/row.tpl.html")}]).run(["formlyConfig","$engineFormly",function(formlyConfig,$engineFormly){formlyConfig.setWrapper({name:"row",templateUrl:$engineFormly.wrapperUrls.row})}]),angular.module("engine.formly").run(["formlyConfig","$engineFormly",function(formlyConfig,$engineFormly){formlyConfig.setWrapper({name:"engineLabel",templateUrl:$engineFormly.wrapperUrls.label,overwriteOk:!0}),formlyConfig.setWrapper({name:"engineHasError",templateUrl:$engineFormly.wrapperUrls.hasError,overwriteOk:!0}),formlyConfig.setWrapper({name:"category",templateUrl:$engineFormly.wrapperUrls.category}),formlyConfig.setWrapper({name:"step",templateUrl:$engineFormly.wrapperUrls.step}),formlyConfig.setWrapper({name:"unit",templateUrl:$engineFormly.wrapperUrls.unit}),formlyConfig.setWrapper({name:"default",templateUrl:$engineFormly.wrapperUrls["default"]})}]).controller("engineFormlyWrapperCtrl",["$scope","$engLog",function($scope,$engLog){$scope.$on("document.form.reloadingMetrics.before",function(event){$engLog.debug("document.form.reloadingMetrics.before"),$scope.loading=!0}),$scope.$on("document.form.reloadingMetrics.after",function(event){$engLog.debug("document.form.reloadingMetrics.after"),$scope.loading=!1})}]),angular.module("engine.list").component("engineDocumentList",{template:"<ng-include src=\"$ctrl.contentTemplateUrl || '/src/list/list.component.tpl.html'\"></ng-include>",controller:"engineListCtrl",bindings:{options:"=",query:"=",formWidget:"@",parentDocument:"=",showCreateButton:"=",listCaption:"=",columns:"=",customButtons:"=",onSelectBehavior:"@",noDocumentsMessage:"@",noParentDocumentMessage:"@",metricId:"@",singleDocument:"=",controller:"@",contentTemplateUrl:"="}}).controller("engineListCtrl",["$scope","$route","$location","engineMetric","$engine","engineQuery","engineAction","engineActionsAvailable","engineActionUtils","engineResolve","DocumentModal","$engLog","$injector","$rootScope","$parse","$controller",function($scope,$route,$location,engineMetric,$engine,engineQuery,engineAction,engineActionsAvailable,engineActionUtils,engineResolve,DocumentModal,$engLog,$injector,$rootScope,$parse,$controller){function init(){null!==$scope.columns&&void 0!==$scope.columns||($scope.columns=[],$engine.visibleDocumentFields.forEach(function(field){void 0===field.caption&&void 0===field.id?$scope.columns.push({name:field}):$scope.columns.push(field)}),engineMetric($scope.options.documentJSON,function(data){angular.forEach(data,function(metric){$scope.columns.push({name:metric.id,caption:metric.label})})})),self.loadDocuments()}var self=this;self.engineResolve=engineResolve,this.formWidget="true"===this.formWidget,$scope.$watch("$ctrl.showCreateButton",function(oldVal,newVal){void 0==self.showCreateButton?self._showCreateButton=!0:self._showCreateButton=newVal}),self.singleDocument?self.template="/src/list/list.single.tpl.html":self.template="/src/list/list.tpl.html",$scope.$parse=$parse,$scope.options=this.options,$scope.columns=this.columns||(this.metricId&&null!=$scope.options.document.queries&&null!=$scope.options.document.queries[this.metricId]?$scope.options.document.queries[this.metricId].columns:$scope.options.list.columns),$scope.query=self.query||$scope.options.query,$scope.customButtons=self.customButtons||self.options.customButtons,_.forEach($scope.customButtons,function(customButton){if(_.isString(customButton.callback)){var callbackName=customButton.callback;customButton.callback=function(documentOptions){$injector.invoke([callbackName,function(callback){callback(documentOptions)}])}}});var _parentDocumentId=this.parentDocument?this.parentDocument.id:void 0;this.arrayCellIterate=function(iterator,array){return null==iterator?array.join(", "):_.map(array,function(element){return _.isFunction(iterator)?iterator(element):$parse(iterator)(element)}).join(", ")},this.process=function(processor,element){return null!=processor&&_.isFunction(processor)?processor(element):element},this.loadDocuments=function(){null==this.parentDocument||null!=this.parentDocument&&null!=this.parentDocument.id?($scope.documents=engineQuery.get($scope.query,this.parentDocument),$scope.documents.$promise.then(function(documents){null!=self.metricId&&(null==self.parentDocument.$ext&&(self.parentDocument.$ext={}),null==self.parentDocument.$ext.queries&&(self.parentDocument.$ext.queries={}),self.parentDocument.$ext.queries[self.metricId]=documents)})):(this.noParentDocument=!0,$scope.documents={$resolved:1})},$scope.actions=engineActionsAvailable.forType($scope.options.documentJSON,_parentDocumentId),$scope.engineAction=function(action,document){return engineAction(action.id,document,null,null,_parentDocumentId).$promise.then(function(data){$rootScope.$broadcast("engine.list.reload",$scope.query)})},$scope.renderCell=function(document,column){return document[column.name]},$scope.getCellTemplate=function(document,column,force_type){if(!force_type&&"link"==column.type)return"/src/list/cell/link.tpl.html";if(column.type){if("date"==column.type)return"/src/list/cell/date.tpl.html";if("array"==column.type)return"/src/list/cell/array.tpl.html"}return"@index"==column.name?"/src/list/cell/index.tpl.html":"/src/list/cell/text.tpl.html"},$scope.onDocumentSelect=function(documentEntry){if(_parentDocumentId)if("LINK"==self.onSelectBehavior){var linkAction=engineActionUtils.getLinkAction(documentEntry.actions);null!=linkAction?$scope.engineAction(linkAction,documentEntry.document):$engLog.warn(self.query," QueriedList onSelectBehavior set as Link, but document does not have link action available")}else 1==$scope.options.subdocument?DocumentModal(documentEntry.document.id,$scope.options,_parentDocumentId,function(){$rootScope.$broadcast("engine.list.reload",$scope.query)}):($location.$$search.step=0,$location.$$path=$scope.genDocumentLink(documentEntry.document.id),$location.$$compose());else $location.path($scope.genDocumentLink(documentEntry.document.id))},$scope.genDocumentLink=function(documentId){return $scope.options.documentUrl.replace(":id",documentId)},$scope.onCreateDocument=function(){1==$scope.options.subdocument?DocumentModal(void 0,$scope.options,self.parentDocument,function(){$rootScope.$broadcast("engine.list.reload",$scope.query)}):$location.path($scope.genDocumentLink("new"))},$scope.canCreateDocument=function(){return null!=engineActionUtils.getCreateUpdateAction($scope.actions)},$scope.$on("engine.list.reload",function(event,query){$engLog.debug("engine.list.reload received, reloading documents","queryId",$scope.query),self.loadDocuments()}),init(),this.controller&&$controller(this.controller,{$scope:$scope})}]),angular.module("engine.list").controller("engineListWrapperCtrl",["$scope","$route","engineDashboard",function($scope,$route,engineDashboard){$scope.options=$route.current.$$route.options;var query=$route.current.$$route.options.query;angular.isArray(query)?($scope.queries=[],angular.forEach(query,function(q){$scope.queries.push({id:q})})):engineDashboard.fromCategory(query,function(data){$scope.queries=[],angular.forEach(data,function(query){$scope.queries.push(query)})})}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/common/action-button/action-button.tpl.html",'<button type="submit"\n        class="btn {{$ctrl.btnClass || \'btn-default\'}}"\n        ng-click="$ctrl.invoke()">\n    <i class="fa fa-spinner fa-spin" aria-hidden="true" ng-show="$ctrl.loading"></i>\n    <translate translate="{{$ctrl.label}}"></translate>\n</button>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/common/document-actions/document-actions.tpl.html",'<div class="eng-loading-box" ng-show="$ctrl.loading">\n    <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>\n</div>\n\n<button type="submit" class="btn btn-primary dark-blue-btn" ng-click="$ctrl.changeStep($ctrl.step+1)"\n        ng-if="!$ctrl.loading && !$ctrl.steps.isLast($ctrl.step)" translate>Next Step:</button>\n\n<button type="submit" class="btn btn-primary" ng-click="$ctrl.changeStep($ctrl.step+1)"\n        ng-if="!$ctrl.loading && !$ctrl.steps.isLast($ctrl.step)">\n    {{$ctrl.step+2}}. {{$ctrl.steps.getStep($ctrl.step+1).name}}\n</button>\n\n<span ng-if="$ctrl.saveAlertLeft == true" ng-show="!$ctrl.loading && $ctrl.dirty && $ctrl.steps.isLast($ctrl.step)" class="document-changes-info document-dirty-warning-right" translate>You must save document to perform actions</span>\n\n<!--Always show save button-->\n<action-button ng-if="$ctrl.dirty == true && !$ctrl.loading && $ctrl.steps.isLast($ctrl.step)"\n               on-click="$ctrl.actionList.getSaveAction().call()" label="{{$ctrl.actionList.getSaveAction().label}}"></action-button>\n\n<!--Validate should be visible only on pristine document-->\n<action-button ng-if="$ctrl.dirty == false && !$ctrl.loading && $ctrl.actionList.getSaveAction()!=null && $ctrl.showValidationButton && $ctrl.steps.isLast($ctrl.step)"\n               on-click="$ctrl.validate()" label="Validate"></action-button>\n\n<!--Show all engine actions-->\n<action-button ng-repeat="action in $ctrl.actionList.actions" ng-if="$ctrl.dirty == false && !$ctrl.loading && $ctrl.steps.isLast($ctrl.step)"\n               on-click="action.call()" label="{{action.label}}"></action-button>\n\n<!--Show custom user actions-->\n<action-button ng-repeat="button in $ctrl.customButtons" ng-if="!$ctrl.loading && $ctrl.steps.isLast($ctrl.step)"\n               on-click="button.action()" label="{{button.label}}"></action-button>\n\n\n<span ng-if="$ctrl.saveAlertLeft == false" ng-show="!$ctrl.loading && $ctrl.dirty && $ctrl.steps.isLast($ctrl.step)" class="document-changes-info document-dirty-warning-left" translate>You must save document to perform actions</span>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/dashboard/dashboard.tpl.html",'<div class="row">\n    <div class="col-md-12">\n        <h1 translate>{{options.caption}}</h1>\n    </div>\n</div>\n<div class="text-box" ng-repeat="query in queries">\n    <div class="text-content">\n        <engine-document-list show-create-button="query.showCreateButton" columns="query.columns"\n                              custom-buttons="query.customButtons"\n                              content-template-url="query.contentTemplateUrl"\n                              controller="{{query.controller || \'\'}}"\n                              no-documents-message="{{query.noDocumentsMessage || $engine.getOptions(query.documentModelId).list.noDocumentsMessage || \'\'}}"\n                              no-parent-document-message="{{query.noParentDocumentMessage || $engine.getOptions(query.documentModelId).list.noParentDocumentMessage || \'\'}}"\n                              query="query.queryId" options="$engine.getOptions(query.documentModelId)"\n                              list-caption="query.label"></engine-document-list>\n\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/document/details/details.tpl.html",'<div class="text-box sidebar-details">\n    <div class="text-content" ng-clock>\n        <h3 style="margin-top: 0px">{{$ctrl.options.document.details.caption || $ctrl.options.name}}</h3>\n\n        <span ng-show="$ctrl.dirty || $ctrl.ngModel.id == null" class="document-changes-info document-dirty">Document has unsaved changes</span>\n        <span ng-show="!$ctrl.dirty && $ctrl.ngModel.id != null" class="document-changes-info document-pristine">All changes have been saved</span>\n\n        <ul class="list-group">\n            <li ng-repeat="entry in $ctrl.options.document.details.entries | conditionFulfiled : $ctrl.ngModel" class="list-group-item">\n                <span translate>{{entry.caption || entry.name}}</span>\n                <span translate>{{$ctrl.$parse(entry.name)($ctrl.ngModel) || \'Not specified yet\'}}</span>\n            </li>\n        </ul>\n\n        <action-button style="width: 100%" btn-class="btn-primary full-width" ng-if="$ctrl.actions.getSaveAction() != null"\n                       on-click="$ctrl.saveDocument()"\n                       label="{{$ctrl.options.document.details.saveCaption || \'Save\' }}">\n        </action-button>\n\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/document/document-modal.tpl.html",'<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="closeModal()">&times;</button>\n    <h4 ng-if="!documentId" class="modal-title" id="myModalLabel" translate>{{ documentOptions.document.caption || \'CREATE \' + documentOptions.name }}</h4>\n    <h4 ng-if="documentId" ><span translate>{{documentOptions.name}}</span> {{engineResolve(document, documentOptions.document.titleSrc)}}</h4>\n\n</div>\n<div class="modal-body">\n    <div class="container-fluid">\n        <engine-document parent-document="parentDocument" dirty="documentDirty" step-list="stepList" document="document" document-id="{{::documentId}}" step="step" options="documentOptions"></engine-document>\n    </div>\n</div>\n<div class="modal-footer">\n    <engine-document-actions show-validation-button="$ctrl.showValidationButton" custom-buttons="customButtons"\n                             document="document" document-scope="$scope" document-parent="parentDocument" dirty="documentDirty"\n                             steps="stepList" step="step" class="btn-group float-left" save-alert-left="true">\n    </engine-document-actions>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/document/document.tpl.html",'<div class="eng-loading-box" ng-show="$ctrl.$ready.$$state.status === 0">\n    <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>\n</div>\n\n<div ng-show="$ctrl.$ready.$$state.status === 1" ng-cloak>\n    <div ng-repeat="message in $ctrl.messages" class="alert alert-{{message.type}} alert-document" role="alert" translate>{{message.body}}</div>\n    <form ng-submit="$ctrl.onSubmit()" name="$ctrl.documentForm.formlyState" novalidate>\n        <formly-form model="$ctrl.document" fields="$ctrl.documentForm.formStructure" class="horizontal"\n                     options="$ctrl.documentForm.formlyOptions" form="$ctrl.documentForm.formlyState">\n\n            <engine-document-actions show-validation-button="$ctrl.showValidationButton" ng-if="!$ctrl.options.subdocument"\n                                     document="$ctrl.document" document-scope="$ctrl.documentScope" dirty="$ctrl.dirty"\n                                     steps="$ctrl.stepList" step="$ctrl.step" class="btn-group"\n                                     save-alert-left="false"></engine-document-actions>\n        </formly-form>\n    </form>\n</div>\n\n<div ng-show="!$ctrl.$ready.$$state.status === 2" ng-cloak translate>\n    REJECTED\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/document/document.wrapper.tpl.html",'<div>\n    <div class="row">\n        <div class="col-md-12">\n            <h1>\n                <span ng-if="!document.id" translate>{{ options.document.caption || \'CREATE \' + options.name }}</span>\n                <span ng-if="document.id" ><span translate>{{options.name}}</span> {{engineResolve(document, options.document.titleSrc)}}</span>\n\n                <span class="bold" ng-if="stepList.getSteps().length > 0">: {{stepList.getStep($routeParams.step).name | translate}} {{$routeParams.step + 1}}/{{stepList.getSteps().length}}</span>\n            </h1>\n        </div>\n    </div>\n    <div class="row">\n        <engine-document step-list="stepList" show-validation-button="options.document.showValidationButton"\n                         document-id="{{::documentId}}" document="document" step="$routeParams.step" options="options"\n                         class="col-lg-8 col-md-8 col-sm-12 engine-document" actions="actions" dirty="documentDirty"></engine-document>\n        <div class="col-lg-4 col-md-4 hidden-sm sidebar-document">\n            <engine-steps ng-model="document" step="$routeParams.step" step-list="stepList" options="options"></engine-steps>\n            <engine-document-details ng-model="document" options="options" actions="actions" dirty="documentDirty"></engine-document-details>\n        </div>\n    </div>\n\n    <div class="document-navi-toggle" ng-click="toggleSideMenu()" ng-class="{active: sideMenuVisible}">\n        <i class="fa fa-file-text" aria-hidden="true"></i>\n    </div>\n    <div class="sidebar-document-rwd" ng-show="sideMenuVisible">\n        <engine-steps ng-model="document" step="$routeParams.step" step-list="stepList" options="options"></engine-steps>\n        <engine-document-details ng-model="document" options="options" actions="actions" dirty="documentDirty"></engine-document-details>\n    </div>\n\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/document/steps.tpl.html",'<div class="text-box text-box-nav">\n    <ul class="nav nav-pills nav-stacked nav-steps">\n        <li ng-repeat="_step in $ctrl.stepList.steps" ng-class="{active: $ctrl.stepList.getCurrentStep() == _step}">\n            <a href="" ng-click="$ctrl.changeStep($index)">\n                <span class="menu-icons">\n                    <i class="fa" aria-hidden="true" style="display: inline-block"\n                       ng-class="{\'fa-check-circle\' : _step.getState() == \'valid\',\n                                  \'fa-circle-o\': _step.getState() == \'blank\',\n                                  \'fa-cog fa-spin\': _step.getState() == \'loading\',\n                                  \'fa-times-circle-o\': _step.getState() == \'invalid\'}"></i>\n                </span>\n                <span class="menu-steps-desc ng-binding">{{$index + 1}}. {{_step.name}}</span>\n            </a>\n        </li>\n    </ul>\n</div>');
}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/attachment.tpl.html",'<div>\n    <span ng-if="error" class="error-text">{{error}}</span>\n    <!--ng-model="model[options.key]"-->\n    <!--<input type="text" ng-model="username"><br/><br/>-->\n    <!--watching model:-->\n    <table>\n        <tr>\n            <th translate>Filename</th>\n            <th>Size</th>\n            <th class="attachment-actions">Actions</th>\n        </tr>\n        <tr ng-if="model[options.key]">\n            <td><a href="{{attachment.getDownloadLink()}}">{{ attachment.getFilename() }}</a></td>\n            <td>{{ attachment.getSize() | formatFileSize }}</td>\n            <td class="attachment-actions">\n                <a href="" class="" ng-click="delete()"><span class="fa fa-trash-o"></span></a>\n            </td>\n        </tr>\n\n    </table>\n\n    <button type="file" class="btn btn-primary btn-file" ngf-select="upload($file)" ng-disabled="status != STATUS.normal"\n            ngf-multiple="false" ng-show="model[options.key] == null">\n        <i class="fa fa-cloud-upload" aria-hidden="true"></i>\n        <span ng-if="status == STATUS.uploading">{{ \'Uploading\' | translate}} {{progress}}%</span>\n        <span ng-if="status == STATUS.normal">{{ (attachment.label || \'Select File\') | translate}}</span>\n        <span ng-if="status == STATUS.disabled">{{ \'You must save document first\' | translate}}</span>\n    </button>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/attachmentList.tpl.html",'<div>\n    <span ng-if="error" class="error-text">{{error}}</span>\n    <!--ng-model="model[options.key]"-->\n    <!--<input type="text" ng-model="username"><br/><br/>-->\n    <!--watching model:-->\n    <table>\n        <tr>\n            <th translate>Filename</th>\n            <th>Size</th>\n            <th class="attachment-actions">Actions</th>\n        </tr>\n        <tr ng-if="model[options.key]" ng-repeat="file in model[options.key]">\n            <td><a href="{{attachment.getDownloadLink(file)}}">{{ attachment.getFilename(file) }}</a></td>\n            <td>{{ attachment.getSize(file) | formatFileSize }}</td>\n            <td class="attachment-actions">\n                <a href="" class="" ng-click="delete(file)"><span class="fa fa-trash-o"></span></a>\n            </td>\n        </tr>\n\n    </table>\n\n    <button type="file" class="btn btn-primary btn-file" ngf-select="upload($file)" ng-disabled="status != STATUS.normal"\n            ngf-multiple="false">\n        <i class="fa fa-cloud-upload" aria-hidden="true"></i>\n        <span ng-if="status == STATUS.uploading">{{ \'Uploading\' | translate}} {{progress}}%</span>\n        <span ng-if="status == STATUS.normal">{{ (attachment.label || \'Select File\') | translate}}</span>\n        <span ng-if="status == STATUS.disabled">{{ \'You must save document first\' | translate}}</span>\n    </button>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/checkbox.tpl.html",'<div class="checkbox">\n\t<label>\n\t\t<input type="checkbox"\n           class="formly-field-checkbox"\n\t\t       ng-model="model[options.key]">\n\t\t{{to.label}}\n\t\t{{to.required ? \'*\' : \'\'}}\n\t</label>\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/datepicker.tpl.html",'<p class="input-group input-group-datepicker">\n    <input id="{{::id}}"\n           name="{{::id}}"\n           ng-model="model[options.key]"\n           class="form-control datepicker"\n           type="text"\n           uib-datepicker-popup="{{to.datepickerOptions.format || \'yyyy-MM-dd\'}}"\n           is-open="openedDatePopUp"\n           datepicker-popup-template-url="/src/formly/types/templates/overrides/datepickerPopup.tpl.html"\n           ng-required="false"\n           show-button-bar="false"\n           datepicker-options="to.datepickerOptions"\n           on-open-focus="false"\n           ng-click="openPopUp($event)"/>\n    <span class="input-group-btn">\n        <button type="button" class="btn btn-default" ng-click="openPopUp($event)">\n            <i class="glyphicon glyphicon-calendar"></i>\n        </button>\n    </span>\n</p>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/input.tpl.html",'<input class="form-control"  ng-model="model[options.key]" placeholder="{{options.templateOptions.placeholder | translate}}">')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/multiCheckbox.tpl.html",'<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="checkbox">\n    <label>\n      <input type="checkbox"\n             id="{{id + \'_\'+ $index}}"\n             ng-model="multiCheckbox.checked[$index]"\n             ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/multiSelect.tpl.html",'<div>\n    <div class="radio-box" ng-class="{\'radio-box-last\': $last, \'radio-box-first\': $first, \'radio-box-active\': model[options.key] == option.value}"\n         ng-repeat="option in to.options">\n        <input type="checkbox" checklist-model="model[options.key]" checklist-value="option.value">\n        <span class="radio-desc">{{::option.name}}</span>\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/multiSelectImage.tpl.html",'<!--<div>\n    <div ng-repeat="option in to.options">\n        <input type="checkbox" id="{{id}}_{{::option.value}}" checklist-model="model[options.key]" checklist-value="option.value">\n        <label class="" style="top: -3px; position: relative;" for="{{id}}_{{::option.value}}">\n            <span class="" >{{::option.name}}</span>\n        </label>\n    </div>\n</div>-->\n\n<div>\n    <div class="content">\n        <div class="row">\n            <div ng-repeat="col in options.templateOptions.cols" class="{{::options.templateOptions.colClass}}">\n               <div class="multiselect-image {{::element.css}} {{options.data.isActive(element.value) ? \'alert-success\' : \'alert-default\'}} form-control"\n                     role="alert" ng-repeat="element in col"\n                     ng-class="{\'disabled\': options.data.isDisabled()}"\n                     ng-click="options.data.isDisabled() || addRemoveModel(element.value)">\n                    <span>{{::element.label}}</span>\n                    <i class="fa fa-check-circle" aria-hidden="true"></i>\n                </div>\n            </div>\n            <!-- we need ng-model for proper usage of multiSelectImage by formly -->\n            <input type="hidden" ng-model="model">\n        </div>\n    </div>\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/multiSelectVertical.tpl.html",'<div>\n    <div ng-repeat="option in to.options">\n        <input ng-disabled="options.data.isDisabled()" ng-class="{\'disabled\': options.data.isDisabled()}"\n               type="checkbox" id="{{id}}_{{::option.value}}" checklist-model="model[options.key]" checklist-value="option.value">\n        <label class="" style="top: -3px; position: relative;" for="{{options.data.isDisabled()?\'\':id+\'_\'+option.value}}">\n            <span class="" >{{::option.name}}</span>\n        </label>\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/overrides/datepickerPopup.tpl.html",'<ul role="presentation" class="uib-datepicker-popup dropdown-menu uib-position-measure engine-popup" dropdown-nested ng-if="isOpen" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n    <li ng-transclude></li>\n    <li ng-if="showButtonBar" class="uib-button-bar">\n    <span class="btn-group pull-left">\n      <button type="button" class="btn btn-sm btn-info uib-datepicker-current" ng-click="select(\'today\', $event)" ng-disabled="isDisabled(\'today\')">{{ getText(\'current\') }}</button>\n      <button type="button" class="btn btn-sm btn-danger uib-clear" ng-click="select(null, $event)">{{ getText(\'clear\') }}</button>\n    </span>\n        <button type="button" class="btn btn-sm btn-success pull-right uib-close" ng-click="close($event)">{{ getText(\'close\') }}</button>\n    </li>\n</ul>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/radio.tpl.html",'<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="radio">\n    <label>\n      <input type="radio"\n             id="{{id + \'_\'+ $index}}"\n             tabindex="0"\n             ng-value="option[to.valueProp || \'value\']"\n             ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/radioGroup.tpl.html",'<div>\n    <div class="pr-category btn-group row row-compensate">\n            <label class="btn btn-default" ng-repeat="(key, option) in to.options">\n                <input type="radio"\n                       id="{{id + \'_\'+ $index}}"\n                       tabindex="0"\n                       ng-value="option[to.valueProp || \'value\']"\n                       ng-model="model[options.key]">\n                <span class="radio-desc" translate>{{option[to.labelProp || \'name\']}}</span>\n            </label>\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/select.tpl.html",'<select class="form-control" ng-model="model[options.key]"></select>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/types/templates/textarea.tpl.html",'<textarea class="form-control" ng-model="model[options.key]"></textarea>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/category.tpl.html",'<div class="{{options.templateOptions.wrapperClass}}" style="position: relative" ng-show="options.data.hasMetrics()" ng-controller="engineFormlyWrapperCtrl">\n    <div ng-show="loading" class="category-loading">\n        <i class="category-loading-spinner fa fa-spinner fa-spin" style="" aria-hidden="true"></i>\n    </div>\n    <div class="{{::options.templateOptions.wrapperInnerClass}}">\n        <h2 ng-if="options.templateOptions.label" translate>{{options.templateOptions.label}}</h2>\n        <formly-transclude></formly-transclude>\n    </div>\n    <div class=clearfix"></div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/default.tpl.html",'<div class="{{::options.to.categoryWrapperCSS}}">\n    <formly-transclude></formly-transclude>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/has-error.tpl.html",'<div class="form-group" ng-class="{\'has-error\': showError }">\n  <formly-transclude></formly-transclude>\n  <div ng-if="showError" class="error-messages">\n    <div ng-repeat="(key, error) in fc.$error" class="message help-block ng-binding ng-scope" translate>{{options.validation.messages[key](fc.$viewValue, fc.$modelValue, this)}}</div>\n  </div>\n  <!-- after researching more about ng-messages integrate it\n  <div ng-messages="fc.$error" ng-if="showError" class="error-messages">\n    <div ng-message="{{ ::name }}" ng-repeat="(name, message) in ::options.validation.messages" class="message help-block ng-binding ng-scope" translate>{{ message(fc.$viewValue, fc.$modelValue, this)}}</div>\n  </div>\n  -->\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/label.tpl.html",'<div class="">\n    <label for="{{id}}" class="control-label {{to.labelSrOnly ? \'sr-only\' : \'\'}}" ng-if="to.label">\n        <span translate>{{to.label}}</span>\n        {{to.required ? \'*\' : \'\'}}\n        <span translate class="grey-text" ng-if="to.description" translate>({{to.description}})</span>\n    </label>\n    <formly-transclude></formly-transclude>\n</div>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/row.tpl.html",'<div ng-if="options.data.hasMetrics()">\n    <p class="row-label" ng-if="to.label" translate>{{to.label}}</p>\n    <div class="row  {{options.templateOptions.wrapperClass}}">\n        <formly-transclude></formly-transclude>\n    </div>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/step.tpl.html",'<div ng-hide="options.data.hide">\n    <div class="text-box" ng-if="options.data.hasEntries()">\n        <div class="{{::options.templateOptions.wrapperInnerClass}}">\n            <h2 ng-if="options.data.step.data.summary.caption" translate>{{options.data.step.data.summary.caption}}</h2>\n            <table class="table">\n                <tr ng-repeat="entry in options.data.step.data.summary.entries">\n                    <td translate>{{entry.caption || entry.name}}</td>\n                    <td translate>{{options.data.$parse(entry.name)(model) || \'Not specified yet\'}}</td>\n                </tr>\n            </table>\n        </div>\n        <div class=clearfix"></div>\n    </div>\n    <formly-transclude></formly-transclude>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/formly/wrappers/templates/unit.tpl.html",'<div class="input-group">\n    <formly-transclude></formly-transclude>\n    <span class="input-group-addon" >{{::options.data.unit}}</span>\n</div>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/cell/array.tpl.html","{{$ctrl.arrayCellIterate(column.iterator,\n                         $ctrl.process(column.processor, $parse(column.name)(document_entry.document)))}}")}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/cell/date.tpl.html","{{$ctrl.process(column.processor, $parse(column.name)(document_entry.document)) | date}}")}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/cell/index.tpl.html","{{$ctrl.process(column.processor, $row+1)}}")}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/cell/link.tpl.html",'<a href="" ng-click="onDocumentSelect(document_entry)" class="proposal-title" ng-include="getCellTemplate(document_entry.document, column, true)"></a>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/cell/text.tpl.html","{{$ctrl.process(column.processor, $parse(column.name)(document_entry.document))}}")}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/list.component.tpl.html",'<ng-include src="$ctrl.template"></ng-include>')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/list.single.tpl.html",'<h2 ng-if="$ctrl.listCaption" translate>{{ $ctrl.listCaption }}</h2>\n<div>\n    <div class="eng-loading-box" ng-show="!documents.$resolved">\n        <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>\n    </div>\n    <div ng-if="documents.$resolved || $ctrl.noParentDocument" ng-cloak>\n        <table ng-repeat="document_entry in documents" ng-if="!documents.$error && !$ctrl.noParentDocument" ng-init="$row=$index" class="proposal-list">\n            <tr class="single-document-top">\n                <td class="text-left"></td>\n                <td class="text-right cog-dropdown" style="padding-top: 5px">\n                    <div class="dropdown" style="height: 9px;" ng-if="document_entry.actions.length > 0">\n                        <a href="" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><span class="glyphicon glyphicon-cog"></span></a>\n                        <ul class="dropdown-menu">\n                            <li ng-repeat="action in document_entry.actions"><a href="" ng-click="engineAction(action, document_entry.document)" translate>{{action.label}}</a></li>\n                            <li ng-if="!document_entry.actions"><span style="margin-left: 5px; margin-right: 5px;" translate>No actions available</span></li>\n                        </ul>\n                    </div>\n                </td>\n            </tr>\n            <tr ng-repeat="column in columns" class="{{column.css}} {{column.style}}">\n                <td class="{{column.css_header || column.css}}" style="text-transform: uppercase;" translate>{{column.caption || column.name}}</td>\n                <td ng-include="getCellTemplate(document_entry.document, column)"></td>\n            </tr>\n        </table>\n\n        <div class="alert alert-warning" role="alert" ng-if="documents.$error" translate>\n            {{documents.$errorMessage || \'An error occurred during document loading\'}}\n        </div>\n        <div class="alert alert-warning" role="alert" ng-if="$ctrl.noParentDocument" translate>\n            {{$ctrl.noParentDocumentMessage || \'Parent document does not exist, save this document first\'}}\n        </div>\n        <div class="alert alert-info" role="alert" ng-if="documents.$resolved && documents.length == 0 && !documents.$error" translate>\n            {{ $ctrl.noDocumentsMessage || \'There are no documents to display\'}}\n        </div>\n    </div>\n</div>\n\n<action-button ng-if="$ctrl._showCreateButton && canCreateDocument()"\n               btn-class="btn-primary" on-click="onCreateDocument()"\n               label="{{$ctrl.options.list.createButtonLabel ? $ctrl.options.list.createButtonLabel : \'Create \'+options.name}}"></action-button>\n\n<action-button ng-repeat="customButton in customButtons"\n               btn-class="btn-primary" on-click="customButton.callback($ctrl.options)"\n               label="{{customButton.label}}"></action-button>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/list.tpl.html",'<h2 ng-if="$ctrl.listCaption" translate>{{ $ctrl.listCaption }}</h2>\n\n<div class="eng-loading-box" ng-show="!documents.$resolved">\n    <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>\n</div>\n<div ng-if="documents.$resolved || $ctrl.noParentDocument" ng-cloak>\n    <table class="proposal-list table">\n        <tr>\n            <th class="{{column.css_header || column.css}}" style="text-transform: uppercase;" ng-repeat="column in columns" translate>{{column.caption || column.name}}</th>\n            <th class="text-right"></th>\n        </tr>\n        <tr ng-repeat="document_entry in documents" ng-if="!documents.$error && !$ctrl.noParentDocument" ng-init="$row=$index">\n            <td ng-repeat="column in columns" class="{{column.css}} {{column.style}}" ng-include="getCellTemplate(document_entry.document, column)"></td>\n            <td class="text-right cog-dropdown">\n                <div class="dropdown" ng-if="document_entry.actions.length > 0">\n                    <a href="" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><i class="fa fa-cog" aria-hidden="true"></i></a>\n                    <ul class="dropdown-menu">\n                        <li ng-repeat="action in document_entry.actions"><a href="" ng-click="engineAction(action, document_entry.document)" translate>{{action.label}}</a></li>\n                        <li ng-if="!document_entry.actions"><span style="margin-left: 5px; margin-right: 5px;" translate>No actions available</span></li>\n                    </ul>\n                </div>\n            </td>\n        </tr>\n    </table>\n    <div class="alert alert-warning" role="alert" ng-if="documents.$error" translate>\n        {{documents.$errorMessage || \'An error occurred during document loading\'}}\n    </div>\n    <div class="alert alert-warning" role="alert" ng-if="$ctrl.noParentDocument" translate>\n        {{$ctrl.noParentDocumentMessage || \'Parent document does not exist, save this document first\'}}\n    </div>\n    <div class="alert alert-info" role="alert" ng-if="documents.$resolved && documents.length == 0 && !documents.$error" translate>\n        {{ $ctrl.noDocumentsMessage || \'There are no documents to display\'}}\n    </div>\n</div>\n\n<action-button ng-if="$ctrl._showCreateButton && canCreateDocument()"\n               btn-class="btn-primary" on-click="onCreateDocument()"\n               label="{{$ctrl.options.list.createButtonLabel ? $ctrl.options.list.createButtonLabel : \'Create \'+options.name}}"></action-button>\n\n<action-button ng-repeat="customButton in customButtons"\n               btn-class="btn-primary" on-click="customButton.callback($ctrl.options)"\n               label="{{customButton.label}}"></action-button>\n')}]),angular.module("engine").run(["$templateCache",function($templateCache){$templateCache.put("/src/list/list.wrapper.tpl.html",'<h1 translate>{{::options.list.caption}}</h1>\n<div class="text-box" ng-repeat="query in queries">\n    <div class="text-content">\n        <engine-document-list content-template-url="query.contentTemplateUrl"\n                controller="{{query.controller || \'\'}}"\n                no-documents-message="{{query.noDocumentsMessage || options.list.noDocumentsMessage || \'\'}}"\n                no-parent-document-message="{{query.noParentDocumentMessage || options.list.noParentDocumentMessage || \'\'}}"\n                show-create-button="$last" query="query.id" options="options"></engine-document-list>\n    </div>\n</div>')}]);